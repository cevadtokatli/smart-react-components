"use strict";(self.webpackChunksmart_react_components_page=self.webpackChunksmart_react_components_page||[]).push([[9461],{19461:(e,t,n)=>{n.r(t),n.d(t,{default:()=>D});var a=n(81871),r=n.n(a),o=n(23532),l=n.n(o),c=n(8663),i=n.n(c),m=n(41629),s=n.n(m),d=n(68342),u=n.n(d),p=n(67294),y=n(12788),f=n(45451),v=n(6847),b=n(44583),g=n(26617),E=n(94086),h=n(40074),k=n(16127),S=n(23655),x=n(23235),O=n(69229),B=n(666);const w=()=>{const[e,t]=p.useState(!1);return p.createElement(p.Fragment,null,p.createElement(s(),{onClick:()=>t(!0)},"Standard Overlay"),e&&p.createElement(u(),{onClick:()=>t(!1)},p.createElement(r(),{alignSelf:"flex-start",background:"$color.dynamic.background",borderRadius:"0.4rem",boxShadow:"0 0 15px 0 rgba(0, 0, 0, .2)",color:"$color.dynamic.bodyFont",display:"flex",fill:"$color.black",flex:"1 1 auto",justifyContent:"space-between",maxWidth:500,padding:"1rem"},p.createElement(l(),{marginBottom:0},"Standard Overlay"))))},C=y.createGlobalStyle`
  .fade-overlay-show {
    opacity: 0;
  }

  .fade-overlay-show-active {
    opacity: 1;
    transition: opacity 300ms ease-in;
  }

  .fade-overlay-hide {
    opacity: 1;
  }

  .fade-overlay-hide-active {
    opacity: 0;
    transition: opacity 300ms ease-in;
  }
`,F=()=>{const[e,t]=p.useState(!1);return p.createElement(p.Fragment,null,p.createElement(C,null),p.createElement(s(),{onClick:()=>t(!0)},"Fade Overlay"),p.createElement(i(),{className:"fade-overlay",duration:300,status:e},p.createElement(u(),{onClick:()=>t(!1)},p.createElement(r(),{alignSelf:"flex-start",background:"$color.dynamic.background",borderRadius:"0.4rem",boxShadow:"0 0 15px 0 rgba(0, 0, 0, .2)",color:"$color.dynamic.bodyFont",display:"flex",fill:"$color.black",flex:"1 1 auto",justifyContent:"space-between",maxWidth:500,padding:"1rem"},p.createElement(l(),{marginBottom:0},"Fade Overlay")))))},$=()=>{const[e,t]=p.useState(!1);return p.createElement(p.Fragment,null,p.createElement(s(),{onClick:()=>t(!0)},"Transparent Overlay"),e&&p.createElement(u(),{hasBackground:!1,onClick:()=>t(!1)},p.createElement(r(),{alignSelf:"flex-start",background:"$color.dynamic.background",borderRadius:"0.4rem",boxShadow:"0 0 15px 0 rgba(0, 0, 0, .2)",color:"$color.dynamic.bodyFont",display:"flex",fill:"$color.black",flex:"1 1 auto",justifyContent:"space-between",maxWidth:500,padding:"1rem"},p.createElement(l(),{marginBottom:0},"Transparent Overlay"))))},R=()=>{const[e,t]=p.useState(!1);return p.createElement(p.Fragment,null,p.createElement(s(),{onClick:()=>t(!0)},"Blur Overlay"),e&&p.createElement(u(),{hasBlurEffect:!0,hasBackground:!1,onClick:()=>t(!1)},p.createElement(r(),{alignSelf:"flex-start",background:"$color.dynamic.background",borderRadius:"0.4rem",boxShadow:"0 0 15px 0 rgba(0, 0, 0, .2)",color:"$color.dynamic.bodyFont",display:"flex",fill:"$color.black",flex:"1 1 auto",justifyContent:"space-between",maxWidth:500,padding:"1rem"},p.createElement(l(),{marginBottom:0},"Blur Overlay"))))},D=()=>((0,B.Z)({title:"Overlay"}),p.createElement(O.Z,null,p.createElement(x.Z,null,p.createElement("div",null,p.createElement("h1",{id:"overlay"},"Overlay"),p.createElement(v.Z,null),p.createElement("p",null,"Overlay effect which prevents ",p.createElement("code",null,"window")," from scrolling."),p.createElement(h.Z,{props:[{name:"children",type:"JSX.Element",isRequired:!0,description:"Overlay content."},{name:"hasBackground",type:"boolean",defaultValue:"true",description:p.createElement(p.Fragment,null,"Sets background to ",p.createElement("code",null,"color.overlay.background"),".")},{name:"hasBlurEffect",type:"boolean",defaultValue:"false",description:p.createElement(p.Fragment,null,"Applies blur effect to other elements in ",p.createElement("code",null,"body")," to emphasize the overlay element and its children. ",p.createElement("code",null,"isInBody")," automatically is set to ",p.createElement("code",null,"true")," when ",p.createElement("code",null,"hasBlurEffect")," is ",p.createElement("code",null,"true"),".")},{name:"isInBody",type:"boolean",defaultValue:"true",description:p.createElement(p.Fragment,null,"Overlay is rendered in ",p.createElement("code",null,"body")," instead of the component tree.")},{name:"breakpoint",type:p.createElement(b.Z,{to:"/api#breakpoint"},"Breakpoint"),description:"When given, displays the overlay when only the window's width is equal or smaller than the given breakpoint width."},{name:"elementProps",type:p.createElement(b.Z,{to:"/api#jsx-element-props"},"JSXElementProps"),description:p.createElement(p.Fragment,null,"Overlay element ",p.createElement(b.Z,{to:"/styled-props"},"Styled Props"),".")}]}),p.createElement(S.Z,null,"Overlay provides ",p.createElement(b.Z,{to:"/element-props#click-events"},"Click Events")," for the overlay element."),p.createElement(S.Z,null,"Overlay provides ",p.createElement("code",null,"forwardRef")," to the overlay element."),p.createElement(g.Z,{first:{code:'import Div from \'@smart-react-components/core/Element/Div\'\nimport H1 from \'@smart-react-components/core/Element/H1\'\nimport Button from \'@smart-react-components/ui/Button\'\nimport Overlay from \'@smart-react-components/ui/Overlay\'\nimport React from \'react\'\n\nexport default () => {\n  const [status, setStatus] = React.useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setStatus(true)}>Standard Overlay</Button>\n      { status && (\n        <Overlay onClick={() => setStatus(false)}>\n          <Div\n            alignSelf="flex-start"\n            background="$color.dynamic.background"\n            borderRadius="0.4rem"\n            boxShadow="0 0 15px 0 rgba(0, 0, 0, .2)"\n            color="$color.dynamic.bodyFont"\n            display="flex"\n            fill="$color.black"\n            flex="1 1 auto"\n            justifyContent="space-between"\n            maxWidth={500}\n            padding="1rem"\n          >\n            <H1 marginBottom={0}>Standard Overlay</H1>\n          </Div>\n        </Overlay>\n      ) }\n    </>\n  )\n}',output:p.createElement(w,null),title:"Standard Overlay"},second:{code:'import Div from \'@smart-react-components/core/Element/Div\'\nimport H1 from \'@smart-react-components/core/Element/H1\'\nimport CSSTransition from \'@smart-react-components/transition/CSSTransition\'\nimport Button from \'@smart-react-components/ui/Button\'\nimport Overlay from \'@smart-react-components/ui/Overlay\'\nimport React from \'react\'\nimport { createGlobalStyle } from \'styled-components\'\n\nconst GlobalStyle = createGlobalStyle`\n  .fade-overlay-show {\n    opacity: 0;\n  }\n\n  .fade-overlay-show-active {\n    opacity: 1;\n    transition: opacity 300ms ease-in;\n  }\n\n  .fade-overlay-hide {\n    opacity: 1;\n  }\n\n  .fade-overlay-hide-active {\n    opacity: 0;\n    transition: opacity 300ms ease-in;\n  }\n`\n\nexport default () => {\n  const [status, setStatus] = React.useState(false)\n\n  return (\n    <>\n      <GlobalStyle />\n      <Button onClick={() => setStatus(true)}>Fade Overlay</Button>\n      <CSSTransition\n        className="fade-overlay"\n        duration={300}\n        status={status}\n      >\n        <Overlay onClick={() => setStatus(false)}>\n          <Div\n            alignSelf="flex-start"\n            background="$color.dynamic.background"\n            borderRadius="0.4rem"\n            boxShadow="0 0 15px 0 rgba(0, 0, 0, .2)"\n            color="$color.dynamic.bodyFont"\n            display="flex"\n            fill="$color.black"\n            flex="1 1 auto"\n            justifyContent="space-between"\n            maxWidth={500}\n            padding="1rem"\n          >\n            <H1 marginBottom={0}>Fade Overlay</H1>\n          </Div>\n        </Overlay>\n      </CSSTransition>\n    </>\n  )\n}',output:p.createElement(F,null),title:"Fade Overlay"}}),p.createElement(g.Z,{first:{code:'import Div from \'@smart-react-components/core/Element/Div\'\nimport H1 from \'@smart-react-components/core/Element/H1\'\nimport Button from \'@smart-react-components/ui/Button\'\nimport Overlay from \'@smart-react-components/ui/Overlay\'\nimport React from \'react\'\n\nexport default () => {\n  const [status, setStatus] = React.useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setStatus(true)}>Transparent Overlay</Button>\n      { status && (\n        <Overlay hasBackground={false} onClick={() => setStatus(false)}>\n          <Div\n            alignSelf="flex-start"\n            background="$color.dynamic.background"\n            borderRadius="0.4rem"\n            boxShadow="0 0 15px 0 rgba(0, 0, 0, .2)"\n            color="$color.dynamic.bodyFont"\n            display="flex"\n            fill="$color.black"\n            flex="1 1 auto"\n            justifyContent="space-between"\n            maxWidth={500}\n            padding="1rem"\n          >\n            <H1 marginBottom={0}>Transparent Overlay</H1>\n          </Div>\n        </Overlay>\n      ) }\n    </>\n  )\n}',output:p.createElement($,null),title:"Transparent Overlay"},second:{code:'import Div from \'@smart-react-components/core/Element/Div\'\nimport H1 from \'@smart-react-components/core/Element/H1\'\nimport Button from \'@smart-react-components/ui/Button\'\nimport Overlay from \'@smart-react-components/ui/Overlay\'\nimport React from \'react\'\n\nexport default () => {\n  const [status, setStatus] = React.useState(false)\n\n  return (\n    <>\n      <Button onClick={() => setStatus(true)}>Blur Overlay</Button>\n      { status && (\n        <Overlay hasBlurEffect hasBackground={false} onClick={() => setStatus(false)}>\n          <Div\n            alignSelf="flex-start"\n            background="$color.dynamic.background"\n            borderRadius="0.4rem"\n            boxShadow="0 0 15px 0 rgba(0, 0, 0, .2)"\n            color="$color.dynamic.bodyFont"\n            display="flex"\n            fill="$color.black"\n            flex="1 1 auto"\n            justifyContent="space-between"\n            maxWidth={500}\n            padding="1rem"\n          >\n            <H1 marginBottom={0}>Blur Overlay</H1>\n          </Div>\n        </Overlay>\n      ) }\n    </>\n  )\n}',output:p.createElement(R,null),title:"Blur Overlay"}}),p.createElement(f.Z,{attrs:[{name:"color.overlay.background",type:"string",description:p.createElement(p.Fragment,null,p.createElement("code",null,"background")," value when ",p.createElement("code",null,"hasBackground")," is ",p.createElement("code",null,"true"),".")},{name:"length.overlay.space",type:"string",description:p.createElement(p.Fragment,null,p.createElement("code",null,"padding")," value.")},{name:"zIndex.overlay",type:"number",description:p.createElement(p.Fragment,null,p.createElement("code",null,"z-index")," value.")}]})),p.createElement(k.Z,{next:{label:"Pagination",to:"/ui-components/pagination"},prev:{label:"Modal",to:"/ui-components/modal"}})),p.createElement(E.Z,{list:[{label:"Overlay",id:"overlay"},{label:"Theme Attributes",id:"theme-attributes"}]})))}}]);