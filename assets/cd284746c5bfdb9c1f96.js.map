{"version":3,"file":"cd284746c5bfdb9c1f96.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqD;AACE;AACF;AACI;AACE;AACjC;AAC6B;AACP;AACU;AACb;AACH;AACN;AACG;AACU;AACjD;AACA,IAAI,2DAAO,GAAG,kBAAkB;AAChC,qBAAqB,wDAAW;AAChC,YAAY,gBAAgB,EAAE,wDAAW,IAAI,SAAS;AACtD,8BAA8B,qDAAc;AAC5C,kCAAkC,qDAAc;AAChD,kCAAkC,qDAAc;AAChD,IAAI,sDAAe;AACnB;AACA,qBAAqB,sDAAK;AAC1B;AACA,KAAK;AACL,YAAY,0DAAmB,CAAC,uDAAI;AACpC,QAAQ,0DAAmB,CAAC,0DAAO;AACnC,YAAY,0DAAmB;AAC/B,gBAAgB,0DAAmB,SAAS,eAAe;AAC3D,gBAAgB,0DAAmB;AACnC;AACA,oBAAoB,0DAAmB,CAAC,6DAAS,IAAI,yEAAyE;AAC9H;AACA,2BAA2B,qDAAM,YAAY,0DAAmB,CAAC,yEAAK,IAAI,+CAA+C;AACzH,2BAA2B,qDAAM,UAAU,0DAAmB,CAAC,yEAAK,IAAI,8CAA8C;AACtH,gBAAgB,0DAAmB,CAAC,yEAAK,IAAI,sGAAsG;AACnJ,gBAAgB,0DAAmB,CAAC,yEAAK,IAAI,8GAA8G;AAC3J,gBAAgB,0DAAmB,CAAC,4EAAQ,IAAI,mHAAmH;AACnK,gBAAgB,0DAAmB,CAAC,0EAAM,IAAI,qCAAqC,qDAAM,mBAAmB,0DAAmB,CAAC,2EAAO,IAAI,uBAAuB,wDAAwD,qDAAM,qBAAqB,uDAAM,GAAG,yBAAyB,IAAI;AAC3R,YAAY,0DAAmB,CAAC,kEAAc,IAAI;AAClD;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB;AACnB;AACA,iEAAe,OAAO,EAAC","sources":["webpack://smart-react-components-page/./src/containers/Contact.tsx"],"sourcesContent":["import Alert from '@smart-react-components/ui/Alert';\nimport Button from '@smart-react-components/ui/Button';\nimport Input from '@smart-react-components/ui/Input';\nimport Loading from '@smart-react-components/ui/Loading';\nimport Textarea from '@smart-react-components/ui/Textarea';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LabelLink from '../components/LabelLink';\nimport SuggestedPages from '../components/SuggestedPages';\nimport { Status } from '../constants/status';\nimport Content from '../elements/Content';\nimport Page from '../elements/Page';\nimport usePage from '../hooks/usePage';\nimport { reset, submit } from '../redux/contact';\nconst Contact = () => {\n    usePage({ title: 'Contact' });\n    const dispatch = useDispatch();\n    const { status, error } = useSelector(({ contact }) => contact);\n    const [email, setEmail] = React.useState('');\n    const [subject, setSubject] = React.useState('');\n    const [message, setMessage] = React.useState('');\n    React.useEffect(() => {\n        return () => {\n            dispatch(reset());\n        };\n    }, []);\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"contact\" }, \"Contact\"),\n                React.createElement(\"p\", null,\n                    \"If you have any question about SRC, give me a feedback or \",\n                    React.createElement(LabelLink, { to: \"https://github.com/cevadtokatli/smart-react-components/issues/new\" }, \"create an issue\"),\n                    \" on GitHub.\"),\n                status === Status.SUCCESS && React.createElement(Alert, { marginBottom: \"$length.3\", palette: \"success\" }, \"Your message has successfully been sent, thank you for the feedback!\"),\n                status === Status.ERROR && React.createElement(Alert, { marginBottom: \"$length.3\", palette: \"danger\" }, error),\n                React.createElement(Input, { label: \"Email\", marginBottom: \"$length.3\", placeholder: \"Email...\", value: email, setValue: setEmail }),\n                React.createElement(Input, { label: \"Subject\", marginBottom: \"$length.3\", placeholder: \"Subject...\", value: subject, setValue: setSubject }),\n                React.createElement(Textarea, { label: \"Message\", marginBottom: \"$length.3\", placeholder: \"Your message...\", value: message, setValue: setMessage }),\n                React.createElement(Button, { isBlock: true, isLoading: status === Status.LOADING, loading: React.createElement(Loading, { color: \"$color.white\" }), marginBottom: \"$length.3\", onClick: () => status !== Status.LOADING && dispatch(submit({ email, subject, message })) }, \"Submit\")),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'API',\n                    to: '/api',\n                }, prev: {\n                    label: 'Server Side Rendering',\n                    to: '/server-side-rendering',\n                } }))));\n};\nexport default Contact;\n"],"names":[],"sourceRoot":""}