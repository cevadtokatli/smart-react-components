{"version":3,"file":"745eac8448b4b1832f72.js","mappings":"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","sources":["webpack://smart-react-components-page/./src/containers/Breadcrumb.tsx"],"sourcesContent":["import BreadcrumbItem from '@smart-react-components/ui/Breadcrumb/BreadcrumbItem';\nimport BreadcrumbList from '@smart-react-components/ui/Breadcrumb/BreadcrumbList';\nimport React from 'react';\nimport AttributesTable from '../components/AttributesTable';\nimport ComponentType from '../components/ComponentType';\nimport LabelLink from '../components/LabelLink';\nimport MultiExample from '../components/MultiExample';\nimport Nav from '../components/Nav';\nimport PropsTable from '../components/PropsTable';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Blockquote from '../elements/Blockquote';\nimport Content from '../elements/Content';\nimport Page from '../elements/Page';\nimport usePage from '../hooks/usePage';\nconst Breadcrumb = () => {\n    usePage({ title: 'Breadcrumb' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"breadcrumb\" }, \"Breadcrumb\"),\n                React.createElement(\"p\", null,\n                    \"Breadcrumb consists of three different components: \",\n                    React.createElement(LabelLink, { to: \"/ui-components/breadcrumb#breadcrumb-list\" }, \"Breadcrumb List\"),\n                    \" which is a container, \",\n                    React.createElement(LabelLink, { to: \"/ui-components/breadcrumb#breadcrumb-item\" }, \"Breadcrumb Item\"),\n                    \" and \",\n                    React.createElement(LabelLink, { to: \"/ui-components/breadcrumb#breadcrumb-link\" }, \"Breadcrumb Link\"),\n                    \" are children elements.\"),\n                React.createElement(\"h2\", { id: \"breadcrumb-list\" }, \"Breadcrumb List\"),\n                React.createElement(\"p\", null,\n                    \"Breadcrumb List wraps \",\n                    React.createElement(LabelLink, { to: \"/ui-components/breadcrumb#breadcrumb-item\" }, \"Breadcrumb Items\"),\n                    \" and \",\n                    React.createElement(LabelLink, { to: \"/ui-components/breadcrumb#breadcrumb-link\" }, \"Breadcrumb Links\"),\n                    \".\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: 'JSX.Element[]',\n                            isRequired: true,\n                            description: 'Breadcrumb items.',\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            defaultValue: 'primary',\n                            description: 'Palette item key.',\n                        },\n                        {\n                            name: 'isOutline',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Removes the background color.',\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Uses the soft colors in the palette.',\n                        },\n                        {\n                            name: 'shape',\n                            type: React.createElement(LabelLink, { to: \"/api#shape-prop\" }, \"ShapeProp\"),\n                            defaultValue: 'rectangle',\n                            description: 'Breadcrumb shape.',\n                        },\n                        {\n                            name: 'hasWaveEffect',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"Enables \",\n                                React.createElement(LabelLink, { to: \"/ui-components/wave-effect\" }, \"Wave Effect\"),\n                                \" on items.\"),\n                        },\n                        {\n                            name: 'waveEffectPalette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/wave-effect\" }, \"Wave Effect\"),\n                                \" palette item key.\"),\n                        },\n                        {\n                            name: 'separator',\n                            type: 'string',\n                            description: 'Separator between items.',\n                        },\n                        {\n                            name: 'elementProps',\n                            type: React.createElement(LabelLink, { to: \"/api#jsx-element-props\" }, \"JSXElementProps\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"List element \",\n                                React.createElement(LabelLink, { to: \"/api#styled-props\" }, \"Styled Props\"),\n                                \".\"),\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Breadcrumb List provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#intrinsic-styled-core-props\" }, \"Intrinsic Styled Core Props\"),\n                    \" for the list element.\"),\n                React.createElement(\"h2\", { id: \"breadcrumb-item\" }, \"Breadcrumb Item\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Breadcrumb Item renders an \",\n                    React.createElement(\"code\", null, \"a\"),\n                    \" element and provides click events to it on interactions.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            isRequired: true,\n                            description: 'Breadcrumb Item content element.',\n                        },\n                        {\n                            name: 'isActive',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Sets the active state.',\n                        },\n                        {\n                            name: 'isDisabled',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Sets the disabled state.',\n                        },\n                        {\n                            name: 'href',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"a\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"href\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'elementProps',\n                            type: React.createElement(LabelLink, { to: \"/api#jsx-element-props\" }, \"JSXElementProps\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"a\"),\n                                \" \",\n                                React.createElement(LabelLink, { to: \"/styled-props\" }, \"Styled Props\"),\n                                \" and HTML attributes.\"),\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Breadcrumb Item provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#click-events\" }, \"Click Events\"),\n                    \" for the item element.\"),\n                React.createElement(\"h2\", { id: \"breadcrumb-link\" }, \"Breadcrumb Link\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Renders an \",\n                    React.createElement(\"code\", null, \"a\"),\n                    \" element. When the element is clicked on, it changes the URL, but doesn't reload the page.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                                \" | (\",\n                                `{`,\n                                \" isActive: boolean, isActivating: boolean \",\n                                `}`,\n                                \") => \",\n                                React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\")),\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"a\"),\n                                \" element content.\"),\n                        },\n                        {\n                            name: 'to',\n                            type: 'string',\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"a href\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'path',\n                            type: React.createElement(LabelLink, { to: \"/api#path\" }, \"Path\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"If it matches the URL, \",\n                                React.createElement(\"code\", null, \"isActive\"),\n                                \" and \",\n                                React.createElement(\"code\", null, \"isActivating\"),\n                                \" props are set to \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \" accordingly. If \",\n                                React.createElement(\"code\", null, \"null\"),\n                                \", it takes \",\n                                React.createElement(\"code\", null, \"to\"),\n                                \" prop value.\"),\n                        },\n                        {\n                            name: 'isExact',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"isActive\"),\n                                \" and \",\n                                React.createElement(\"code\", null, \"isActivating\"),\n                                \" props are set to \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \" when the path matches the URL exactly.\"),\n                        },\n                        {\n                            name: 'isDisabled',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                \"Doesn't bind any of the events and sets \",\n                                React.createElement(\"code\", null, \"pointerEvents\"),\n                                \" as \",\n                                React.createElement(\"code\", null, \"none\"),\n                                \" to \",\n                                React.createElement(\"code\", null, \"a\"),\n                                \" element.\"),\n                        },\n                        {\n                            name: 'elementProps',\n                            type: React.createElement(LabelLink, { to: \"/api#jsx-element-props\" }, \"JSXElementProps\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"a\"),\n                                \" \",\n                                React.createElement(LabelLink, { to: \"/styled-props\" }, \"Styled Props\"),\n                                \" and HTML attributes.\"),\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"example\" }, \"Example\"),\n                React.createElement(MultiExample, { first: {\n                        code: `import BreadcrumbItem from '@smart-react-components/ui/Breadcrumb/BreadcrumbItem'\nimport BreadcrumbList from '@smart-react-components/ui/Breadcrumb/BreadcrumbList'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <BreadcrumbList>\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList palette=\"secondary\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList palette=\"success\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList palette=\"danger\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList palette=\"warning\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList palette=\"info\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList palette=\"light\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList palette=\"dark\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(BreadcrumbList, null,\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { palette: \"secondary\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { palette: \"success\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { palette: \"danger\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { palette: \"warning\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { palette: \"info\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { palette: \"light\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { palette: \"dark\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")))),\n                        title: 'Palette',\n                    }, second: {\n                        code: `import BreadcrumbItem from '@smart-react-components/ui/Breadcrumb/BreadcrumbItem'\nimport BreadcrumbList from '@smart-react-components/ui/Breadcrumb/BreadcrumbList'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <BreadcrumbList isOutline>\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isOutline palette=\"secondary\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isOutline palette=\"success\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isOutline palette=\"danger\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isOutline palette=\"warning\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isOutline palette=\"info\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isOutline palette=\"light\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isOutline palette=\"dark\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(BreadcrumbList, { isOutline: true },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isOutline: true, palette: \"secondary\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isOutline: true, palette: \"success\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isOutline: true, palette: \"danger\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isOutline: true, palette: \"warning\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isOutline: true, palette: \"info\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isOutline: true, palette: \"light\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isOutline: true, palette: \"dark\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")))),\n                        title: 'Outline',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import BreadcrumbItem from '@smart-react-components/ui/Breadcrumb/BreadcrumbItem'\nimport BreadcrumbList from '@smart-react-components/ui/Breadcrumb/BreadcrumbList'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <BreadcrumbList isSoft>\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isSoft palette=\"secondary\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isSoft palette=\"success\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isSoft palette=\"danger\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isSoft palette=\"warning\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isSoft palette=\"info\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isSoft palette=\"light\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList isSoft palette=\"dark\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(BreadcrumbList, { isSoft: true, waveEffectPalette: \"primary\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isSoft: true, palette: \"secondary\", marginTop: \"$length.3\", waveEffectPalette: \"secondary\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isSoft: true, palette: \"success\", marginTop: \"$length.3\", waveEffectPalette: \"success\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isSoft: true, palette: \"danger\", marginTop: \"$length.3\", waveEffectPalette: \"danger\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isSoft: true, palette: \"warning\", marginTop: \"$length.3\", waveEffectPalette: \"warning\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isSoft: true, palette: \"info\", marginTop: \"$length.3\", waveEffectPalette: \"info\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isSoft: true, palette: \"light\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { isSoft: true, palette: \"dark\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")))),\n                        title: 'Soft',\n                    }, second: {\n                        code: `import BreadcrumbItem from '@smart-react-components/ui/Breadcrumb/BreadcrumbItem'\nimport BreadcrumbList from '@smart-react-components/ui/Breadcrumb/BreadcrumbList'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <BreadcrumbList>\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n    <BreadcrumbList shape=\"rounded\" marginTop=\"$length.3\">\n      <BreadcrumbItem>Home</BreadcrumbItem>\n      <BreadcrumbItem>Countries</BreadcrumbItem>\n      <BreadcrumbItem isActive>New Zealand</BreadcrumbItem>\n    </BreadcrumbList>\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(BreadcrumbList, null,\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")),\n                            React.createElement(BreadcrumbList, { shape: \"rounded\", marginTop: \"$length.3\" },\n                                React.createElement(BreadcrumbItem, null, \"Home\"),\n                                React.createElement(BreadcrumbItem, null, \"Countries\"),\n                                React.createElement(BreadcrumbItem, { isActive: true }, \"New Zealand\")))),\n                        title: 'Shape',\n                    } }),\n                React.createElement(\"h2\", { id: \"theme-attributes\" }, \"Theme Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'cursor.breadcrumb',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"cursor\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'cursor.breadcrumbDisabled',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"cursor\"),\n                                \" value when \",\n                                React.createElement(\"code\", null, \"isDisabled\"),\n                                \" is \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'fontFamily.breadcrumb',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"font-family\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'fontSize.breadcrumb',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"font-size\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'i18n.breadcrumb.separator',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Separator value. Default value of \",\n                                React.createElement(\"code\", null, \"seperator\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'length.breadcrumb.padding',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#coordinator\" }, \"Coordinator\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"padding\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'opacity.breadcrumbDisabled',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"opacity\"),\n                                \" value when \",\n                                React.createElement(\"code\", null, \"isDisabled\"),\n                                \" is \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'radius.breadcrumb',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#shape\" }, \"Shape\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"border-radius\"),\n                                \" value. Used by \",\n                                React.createElement(\"code\", null, \"shape\"),\n                                \" prop.\"),\n                        },\n                    ] })),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Button',\n                    to: '/ui-components/button',\n                }, prev: {\n                    label: 'Badge',\n                    to: '/ui-components/badge',\n                } })),\n        React.createElement(Nav, { list: [\n                { label: 'Breadcrumb', id: 'breadcrumb' },\n                { label: 'Breadcrumb List', id: 'breadcrumb-list' },\n                { label: 'Breadcrumb Item', id: 'breadcrumb-item' },\n                { label: 'Breadcrumb Link', id: 'breadcrumb-link' },\n                { label: 'Example', id: 'example' },\n                { label: 'Theme Attributes', id: 'theme-attributes' },\n            ] })));\n};\nexport default Breadcrumb;\n"],"names":[],"sourceRoot":""}