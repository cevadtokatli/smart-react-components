{"version":3,"file":"513648384fd49b39fc52.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA2D;AACO;AACxC;AACkC;AACJ;AACR;AACM;AACf;AACW;AACQ;AACV;AACN;AACN;AACG;AACvC;AACA,IAAI,2DAAO,GAAG,kBAAkB;AAChC,YAAY,0DAAmB,CAAC,uDAAI;AACpC,QAAQ,0DAAmB,CAAC,0DAAO;AACnC,YAAY,0DAAmB;AAC/B,gBAAgB,0DAAmB,SAAS,eAAe;AAC3D,gBAAgB,0DAAmB,CAAC,iEAAa;AACjD,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB,CAAC,8DAAU,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,kCAAkC,0DAAmB,CAAC,6DAAS,IAAI,sBAAsB;AACzF;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB,gBAAgB,0DAAmB,CAAC,6DAAU;AAC9C;AACA,oBAAoB,0DAAmB,CAAC,6DAAS,IAAI,oDAAoD;AACzG;AACA,gBAAgB,0DAAmB,CAAC,gEAAY,IAAI;AACpD;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS,eAAe,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAmB,CAAC,iFAAG,IAAI,eAAe,SAAS,iBAAiB,SAAS,GAAG;AACjH,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,iDAAiD;AACrH,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,sEAAsE;AAC1I,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,oEAAoE;AACxI,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,mEAAmE;AACvI,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,oEAAoE;AACxI,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,iEAAiE;AACrI,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,kEAAkE;AACtI,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,iEAAiE;AACrI;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS,eAAe,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAmB,CAAC,iFAAG,IAAI,eAAe,SAAS,iBAAiB,SAAS,GAAG;AACjH,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,gEAAgE;AACpI,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,iDAAiD;AACrH,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,gEAAgE;AACpI,4BAA4B,0DAAmB,CAAC,2EAAgB,IAAI,mGAAmG;AACvK;AACA,uBAAuB;AACvB,gBAAgB,0DAAmB,SAAS,uBAAuB;AACnE,gBAAgB,0DAAmB,CAAC,mEAAe,IAAI;AACvD;AACA;AACA;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB,YAAY,0DAAmB,CAAC,kEAAc,IAAI;AAClD;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB;AACnB,QAAQ,0DAAmB,CAAC,uDAAM,IAAI;AACtC,kBAAkB,iCAAiC;AACnD,kBAAkB,iDAAiD;AACnE,eAAe;AACf;AACA,iEAAe,OAAO,EAAC","sources":["webpack://smart-react-components-page/./src/containers/Loading.tsx"],"sourcesContent":["import Div from '@smart-react-components/core/Element/Div';\nimport LoadingComponent from '@smart-react-components/ui/Loading';\nimport React from 'react';\nimport AttributesTable from '../components/AttributesTable';\nimport ComponentType from '../components/ComponentType';\nimport LabelLink from '../components/LabelLink';\nimport MultiExample from '../components/MultiExample';\nimport Navbar from '../components/Nav';\nimport PropsTable from '../components/PropsTable';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Blockquote from '../elements/Blockquote';\nimport Content from '../elements/Content';\nimport Page from '../elements/Page';\nimport usePage from '../hooks/usePage';\nconst Loading = () => {\n    usePage({ title: 'Loading' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"loading\" }, \"Loading\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"Loading animation effect.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'color',\n                            type: 'string',\n                            defaultValue: '$color.blue',\n                            description: 'Icon color.'\n                        },\n                        {\n                            name: 'size',\n                            type: React.createElement(LabelLink, { to: \"/api#size-prop\" }, \"SizeProp\"),\n                            defaultValue: 'medium',\n                            description: 'Icon size, has responsive support.',\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Loading provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#intrinsic-styled-margin-props\" }, \"Intrinsic Styled Margin Props\"),\n                    \" for the icon element.\"),\n                React.createElement(MultiExample, { first: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Loading from '@smart-react-components/ui/Loading'\nimport React from 'react'\n\nexport default () => (\n  <Div marginLeft=\"-{length.3}\" marginTop=\"-{length.3}\">\n    <Loading marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading color=\"!secondary\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading color=\"!success\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading color=\"!danger\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading color=\"!warning\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading color=\"!info\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading color=\"!light\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading color=\"!dark\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n  </Div>\n)`,\n                        output: (React.createElement(Div, { marginLeft: \"-{length.3}\", marginTop: \"-{length.3}\" },\n                            React.createElement(LoadingComponent, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { color: \"!secondary\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { color: \"!success\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { color: \"!danger\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { color: \"!warning\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { color: \"!info\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { color: \"!light\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { color: \"!dark\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }))),\n                        title: 'Color',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Loading from '@smart-react-components/ui/Loading'\nimport React from 'react'\n\nexport default () => (\n  <Div marginLeft=\"-{length.3}\" marginTop=\"-{length.3}\">\n    <Loading size=\"small\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading size=\"large\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n    <Loading size=\"small\" sizeMd=\"medium\" sizeLg=\"large\" marginLeft=\"$length.3\" marginTop=\"$length.3\" />\n  </Div>\n)`,\n                        output: (React.createElement(Div, { marginLeft: \"-{length.3}\", marginTop: \"-{length.3}\" },\n                            React.createElement(LoadingComponent, { size: \"small\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { size: \"large\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }),\n                            React.createElement(LoadingComponent, { size: \"small\", sizeMd: \"medium\", sizeLg: \"large\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }))),\n                        title: 'Size',\n                    } }),\n                React.createElement(\"h2\", { id: \"size-attributes\" }, \"Size Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'loading',\n                            type: 'string',\n                            description: 'Icon size.',\n                        },\n                    ] })),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Modal',\n                    to: '/ui-components/modal',\n                }, prev: {\n                    label: 'Input',\n                    to: '/ui-components/input',\n                } })),\n        React.createElement(Navbar, { list: [\n                { label: 'Loading', id: 'loading' },\n                { label: 'Size Attributes', id: 'size-attributes' },\n            ] })));\n};\nexport default Loading;\n"],"names":[],"sourceRoot":""}