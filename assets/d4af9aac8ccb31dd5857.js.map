{"version":3,"file":"d4af9aac8ccb31dd5857.js","mappings":"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","sources":["webpack://smart-react-components-page/./src/containers/FixedBox.tsx"],"sourcesContent":["import Div from '@smart-react-components/core/Element/Div';\nimport Button from '@smart-react-components/ui/Button';\nimport ButtonList from '@smart-react-components/ui/Button/ButtonList';\nimport FixedBoxComponent from '@smart-react-components/ui/FixedBox';\nimport React from 'react';\nimport AttributesTable from '../components/AttributesTable';\nimport ComponentType from '../components/ComponentType';\nimport Example from '../components/Example';\nimport LabelLink from '../components/LabelLink';\nimport Navbar from '../components/Nav';\nimport PropsTable from '../components/PropsTable';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Blockquote from '../elements/Blockquote';\nimport Content from '../elements/Content';\nimport Li from '../elements/Li';\nimport Page from '../elements/Page';\nimport Ul from '../elements/Ul';\nimport usePage from '../hooks/usePage';\nconst FixedBox = () => {\n    usePage({ title: 'Fixed Box' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"fixed-box\" }, \"Fixed Box\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"Fixed Box doesn't produce any UI elements. It takes two children elements, the first of which for the toggle element and the second for the box element. The box element is displayed in different positions according to the toggle element.\"),\n                React.createElement(\"p\", null,\n                    \"The toggle element \",\n                    React.createElement(\"i\", null,\n                        \"(the first item of \",\n                        React.createElement(\"code\", null, \"children\"),\n                        \" prop)\"),\n                    \" should accept \",\n                    React.createElement(\"code\", null, \"ref\"),\n                    \" so it should be either Styled component, or React component with \",\n                    React.createElement(\"code\", null, \"forwardRef\"),\n                    \".\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: '[JSX.Element, JSX.Element]',\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null, \"The first element for the toggle element, and the second for the box element.\"),\n                        },\n                        {\n                            name: 'status',\n                            type: 'boolean',\n                            description: 'Fixed Box display status.',\n                        },\n                        {\n                            name: 'setStatus',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<boolean>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"status\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'position',\n                            type: React.createElement(LabelLink, { to: \"/api#position\" }, \"Position\"),\n                            description: React.createElement(React.Fragment, null, \"Position of the box element by the toggle element. If the box element gets overflown in the given position, it is rendered in another available position.\"),\n                        },\n                        {\n                            name: 'minWidth',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                \"The box element \",\n                                React.createElement(\"code\", null, \"min-width\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'maxWidth',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                \"The box element \",\n                                React.createElement(\"code\", null, \"max-width\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'space',\n                            type: 'number',\n                            defaultValue: '0',\n                            description: 'Space between the toggle and the box element.',\n                        },\n                        {\n                            name: 'triggerInteraction',\n                            type: React.createElement(LabelLink, { to: \"/api#trigger-interaction\" }, \"TriggerInteraction\"),\n                            defaultValue: 'CLICK',\n                            description: React.createElement(React.Fragment, null,\n                                \"Calls \",\n                                React.createElement(\"code\", null, \"setStatus\"),\n                                \" with \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \" param when the toggle element is interracted with the given interaction.\"),\n                        },\n                        {\n                            name: 'isDismissible',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"The \",\n                                React.createElement(\"code\", null, \"window\"),\n                                \" click calls \",\n                                React.createElement(\"code\", null, \"setStatus\"),\n                                \" with \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \" param.\"),\n                        },\n                        {\n                            name: 'breakpoint',\n                            type: React.createElement(LabelLink, { to: \"/api#breakpoint\" }, \"Breakpoint\"),\n                            defaultValue: 'medium',\n                            description: 'When given, displays the box inside an overlay when only the window\\'s width is equal or smaller than the given breakpoint width.',\n                        },\n                        {\n                            name: 'transitionClassName',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Transition \",\n                                React.createElement(\"code\", null, \"className\"),\n                                \" prefix.\"),\n                        },\n                        {\n                            name: 'transitionDuration',\n                            type: 'number',\n                            description: 'Transition duration in milliseconds.',\n                        },\n                        {\n                            name: 'hasShowAnimation',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"When \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \", skips the show animation.\"),\n                        },\n                        {\n                            name: 'hasHideAnimation',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"When \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \", skips the hide animation.\"),\n                        },\n                        {\n                            name: 'beforeShow',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-before-callback\" }, \"TransitionBeforeCallback\"),\n                            description: 'Called before the show transition is started; right after the component is mounted and element is rendered in the DOM.',\n                        },\n                        {\n                            name: 'beforeHide',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-before-callback\" }, \"TransitionBeforeCallback\"),\n                            description: 'Called before the hide transition is started.',\n                        },\n                        {\n                            name: 'afterShow',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-after-callback\" }, \"TransitionAfterCallback\"),\n                            description: 'Called after the show transition is completed.',\n                        },\n                        {\n                            name: 'afterHide',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-after-callback\" }, \"TransitionAfterCallback\"),\n                            description: 'Called after the hide transition is completed; the component is unmounted and element is removed from the DOM.',\n                        },\n                        {\n                            name: 'elementProps',\n                            type: React.createElement(LabelLink, { to: \"/api#jsx-element-props\" }, \"JSXElementProps\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"Fixed Box element \",\n                                React.createElement(LabelLink, { to: \"/api#styled-props\" }, \"Styled Props\"),\n                                \".\"),\n                        },\n                    ] }),\n                React.createElement(\"h3\", null, \"Trigger Interaction\"),\n                React.createElement(Ul, null,\n                    React.createElement(Li, null,\n                        React.createElement(\"b\", null, \"CLICK:\"),\n                        \" is ocurred when the trigger element is clicked on.\"),\n                    React.createElement(Li, null,\n                        React.createElement(\"b\", null, \"HOVER:\"),\n                        \" is ocurred when the trigger element is hovered on.\"),\n                    React.createElement(Li, null,\n                        React.createElement(\"b\", null, \"RIGHT_CLICK:\"),\n                        \" is ocurred when the trigger element is right-clicked on.\"),\n                    React.createElement(Li, null,\n                        React.createElement(\"b\", null, \"NONE:\"),\n                        \" The trigger element is never triggered \",\n                        React.createElement(\"i\", null, \"(for custom usage purposes)\"),\n                        \".\")),\n                React.createElement(Blockquote, { marginTop: \"$length.3\" },\n                    \"You can set to \",\n                    React.createElement(\"code\", null, \"CLICK | HOVER\"),\n                    \" to trigger on both click and hover.\"),\n                React.createElement(\"p\", null, \"You can set the trigger interaction for the Fixed Box.\"),\n                React.createElement(\"h3\", null, \"Set Position\"),\n                React.createElement(\"p\", null,\n                    \"Fixed Box provides an event for you to set position custom in case you have modified the box element afterwards. When you trigger \",\n                    React.createElement(\"code\", null, \"src.fixedBox.setPosition\"),\n                    \" event for the toggle element, it sets position in the component.\"),\n                React.createElement(\"h2\", { id: \"example\" }, \"Example\"),\n                React.createElement(Example, { code: `import Div from '@smart-react-components/core/Element/Div'\nimport Button from '@smart-react-components/ui/Button'\nimport ButtonList from '@smart-react-components/ui/Button/ButtonList'\nimport FixedBox from '@smart-react-components/ui/FixedBox'\nimport React from 'react'\n\nexport default () => (\n  <ButtonList>\n    <FixedBox\n      space={3}\n    >\n      <Button\n        marginLeft=\"$length.2\"\n        marginTop=\"$length.2\"\n      >\n        Fixed Box\n      </Button>\n      <Div\n        backgroundColor=\"$color.dynamic.background\"\n        border=\"solid 1px {color.dynamic.gray}\"\n        color=\"$color.dynamic.font\"\n        paddingVertical=\"$length.2\"\n        textAlign=\"center\"\n      >\n        Fixed Box\n      </Div>\n    </FixedBox>\n    <FixedBox\n      hasHideAnimation={false}\n      hasShowAnimation={false}\n      space={3}\n    >\n      <Button\n        marginLeft=\"$length.2\"\n        marginTop=\"$length.2\"\n      >\n        Fixed Box without Animation\n      </Button>\n      <Div\n        backgroundColor=\"$color.dynamic.background\"\n        border=\"solid 1px {color.dynamic.gray}\"\n        color=\"$color.dynamic.font\"\n        paddingVertical=\"$length.2\"\n        textAlign=\"center\"\n      >\n        Fixed Box\n      </Div>\n    </FixedBox>\n  </ButtonList>\n)`, output: (React.createElement(ButtonList, null,\n                        React.createElement(FixedBoxComponent, { space: 3 },\n                            React.createElement(Button, { marginLeft: \"$length.2\", marginTop: \"$length.2\" }, \"Fixed Box\"),\n                            React.createElement(Div, { backgroundColor: \"$color.dynamic.background\", border: \"solid 1px {color.dynamic.gray}\", color: \"$color.dynamic.font\", paddingVertical: \"$length.2\", textAlign: \"center\" }, \"Fixed Box\")),\n                        React.createElement(FixedBoxComponent, { hasHideAnimation: false, hasShowAnimation: false, space: 3 },\n                            React.createElement(Button, { marginLeft: \"$length.2\", marginTop: \"$length.2\" }, \"Fixed Box without Animation\"),\n                            React.createElement(Div, { backgroundColor: \"$color.dynamic.background\", border: \"solid 1px {color.dynamic.gray}\", color: \"$color.dynamic.font\", paddingVertical: \"$length.2\", textAlign: \"center\" }, \"Fixed Box\")))) }),\n                React.createElement(\"h2\", { id: \"theme-attributes\" }, \"Theme Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'transition.fixedBoxDuration',\n                            type: 'number',\n                            description: 'Duration in milliseconds.',\n                        },\n                        {\n                            name: 'zIndex.fixedBox',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"z-index\"),\n                                \" value.\"),\n                        },\n                    ] })),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Grid',\n                    to: '/ui-components/grid',\n                }, prev: {\n                    label: 'Dropdown',\n                    to: '/ui-components/dropdown',\n                } })),\n        React.createElement(Navbar, { list: [\n                { label: 'Fixed Box', id: 'fixed-box' },\n                { label: 'Example', id: 'example' },\n                { label: 'Theme Attributes', id: 'theme-attributes' },\n            ] })));\n};\nexport default FixedBox;\n"],"names":[],"sourceRoot":""}