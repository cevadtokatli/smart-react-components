"use strict";(self.webpackChunksmart_react_components_page=self.webpackChunksmart_react_components_page||[]).push([[4238],{94238:(e,t,n)=>{n.r(t),n.d(t,{default:()=>L});var o=n(41629),l=n.n(o),a=n(54531),i=n.n(a),r=n(70611),p=n.n(r),s=n(67294),m=n(45451),c=n(6847),u=n(44583),g=n(26617),f=n(94086),d=n(40074),h=n(16127),T=n(23655),E=n(23235),$=n(52044),y=n(69229),S=n(54870),B=n(666);const L=()=>((0,B.Z)({title:"Tooltip"}),s.createElement(y.Z,null,s.createElement(E.Z,null,s.createElement("div",null,s.createElement("h1",{id:"tooltip"},"Tooltip"),s.createElement(c.Z,null),s.createElement("p",null,"Tooltip component takes two children elements; the first of which for the toggle element and the second for the content element."),s.createElement("p",null,"The toggle element ",s.createElement("i",null,"(the first item of ",s.createElement("code",null,"children")," prop)")," should accept ",s.createElement("code",null,"ref")," so it should be either Styled component, or React component with ",s.createElement("code",null,"forwardRef"),"."),s.createElement("h3",null,"Props"),s.createElement(d.Z,{props:[{name:"children",type:"[JSX.Element, JSX.Element]",isRequired:!0,description:"The first element for the toggle element, and the second element for the tooltip content."},{name:"status",type:"boolean",description:"Tooltip display status."},{name:"setStatus",type:s.createElement(s.Fragment,null,s.createElement(u.Z,{to:"/api#set-state"},"SetState"),"<boolean>"),description:s.createElement(s.Fragment,null,"The method that sets ",s.createElement("code",null,"status"),".")},{name:"palette",type:s.createElement(u.Z,{to:"/api#palette-prop"},"PaletteProp"),defaultValue:"!dynamic",description:"Palette item key."},{name:"isSoft",type:"boolean",defaultValue:"false",description:"Uses the soft colors in the palette."},{name:"size",type:s.createElement(u.Z,{to:"/api#size-prop"},"SizeProp"),defaultValue:"medium",description:"Tooltip size, has responsive support."},{name:"position",type:s.createElement(u.Z,{to:"/api#position"},"Position"),defaultValue:"TOP",description:"Position of the tooltip element by the toggle element. If the tooltip element gets overflown in the given position, it is rendered at another available position."},{name:"space",type:"number",defaultValue:"0",description:"Space between the toggle and the tooltip element."},{name:"triggerInteraction",type:s.createElement(u.Z,{to:"/api#trigger-interaction"},"TriggerInteraction"),defaultValue:"CLICK",description:s.createElement(s.Fragment,null,"Calls ",s.createElement("code",null,"setStatus")," with ",s.createElement("code",null,"true")," param when the toggle element is interracted with the given interaction.")},{name:"isDismissible",type:"boolean",defaultValue:"false",description:s.createElement(s.Fragment,null,"The ",s.createElement("code",null,"window")," click calls ",s.createElement("code",null,"setStatus")," with ",s.createElement("code",null,"false")," param.")},{name:"transitionClassName",type:"string",description:s.createElement(s.Fragment,null,"Transition ",s.createElement("code",null,"className")," prefix.")},{name:"transitionDuration",type:"number",description:"Transition duration in milliseconds."},{name:"hasShowAnimation",type:"boolean",defaultValue:"true",description:s.createElement(s.Fragment,null,"When ",s.createElement("code",null,"false"),", skips the show animation.")},{name:"hasHideAnimation",type:"boolean",defaultValue:"true",description:s.createElement(s.Fragment,null,"When ",s.createElement("code",null,"false"),", skips the hide animation.")},{name:"beforeShow",type:s.createElement(u.Z,{to:"/api#transition-before-callback"},"TransitionBeforeCallback"),description:"Called before the show transition is started; right after the component is mounted and element is rendered in the DOM."},{name:"beforeHide",type:s.createElement(u.Z,{to:"/api#transition-before-callback"},"TransitionBeforeCallback"),description:"Called before the hide transition is started."},{name:"afterShow",type:s.createElement(u.Z,{to:"/api#transition-after-callback"},"TransitionAfterCallback"),description:"Called after the show transition is completed."},{name:"afterHide",type:s.createElement(u.Z,{to:"/api#transition-after-callback"},"TransitionAfterCallback"),description:"Called after the hide transition is completed; the component is unmounted and element is removed from the DOM."},{name:"hoverDelay",type:"number",defaultValue:"0",description:"Delay in milliseconds before the tooltip is shown when the mouse is hovered on the toggle element."}]}),s.createElement("h3",null,"Trigger Interaction"),s.createElement("p",null,"You can set the trigger interaction for the Tooltip."),s.createElement(S.Z,null,s.createElement($.Z,null,s.createElement("b",null,"CLICK:")," is ocurred when the trigger element is clicked on."),s.createElement($.Z,null,s.createElement("b",null,"HOVER:")," is ocurred when the trigger element is hovered on."),s.createElement($.Z,null,s.createElement("b",null,"RIGHT_CLICK:")," is ocurred when the trigger element is right-clicked on."),s.createElement($.Z,null,s.createElement("b",null,"NONE:")," The trigger element is never triggered ",s.createElement("i",null,"(for custom usage purposes)"),".")),s.createElement(T.Z,{marginTop:"$length.3"},"You can set to ",s.createElement("code",null,"CLICK | HOVER")," to trigger on both click and hover."),s.createElement("h3",null,"Set Position"),s.createElement("p",null,"Tooltip provides an event for you to set position custom in case you have modified the box element afterwards. When you trigger ",s.createElement("code",null,"src.tooltip.setPosition")," event for the toggle element, it sets position in the component."),s.createElement("h2",{id:"example"},"Example"),s.createElement(g.Z,{first:{code:'import Button from \'@smart-react-components/ui/Button\'\nimport ButtonList from \'@smart-react-components/ui/Button/ButtonList\'\nimport Tooltip from \'@smart-react-components/ui/Tooltip\'\nimport React from \'react\'\n\nexport default () => (\n  <ButtonList>\n    <Tooltip>\n      <Button palette="!dynamic" marginLeft="$length.3" marginTop="$length.3">!Dynamic</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette="dynamic">\n      <Button palette="dynamic" marginLeft="$length.3" marginTop="$length.3">Dynamic</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette="primary">\n      <Button marginLeft="$length.3" marginTop="$length.3">Primary</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette="secondary">\n      <Button palette="secondary" marginLeft="$length.3" marginTop="$length.3">Secondary</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette="success">\n      <Button palette="success" marginLeft="$length.3" marginTop="$length.3">Success</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette="danger">\n      <Button palette="danger" marginLeft="$length.3" marginTop="$length.3">Danger</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette="warning">\n      <Button palette="warning" marginLeft="$length.3" marginTop="$length.3">Warning</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette="info">\n      <Button palette="info" marginLeft="$length.3" marginTop="$length.3">Info</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n  </ButtonList>\n)',output:s.createElement(i(),null,s.createElement(p(),null,s.createElement(l(),{palette:"!dynamic",marginLeft:"$length.3",marginTop:"$length.3"},"!Dynamic"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{palette:"dynamic"},s.createElement(l(),{palette:"dynamic",marginLeft:"$length.3",marginTop:"$length.3"},"Dynamic"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{palette:"primary"},s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Primary"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{palette:"secondary"},s.createElement(l(),{palette:"secondary",marginLeft:"$length.3",marginTop:"$length.3"},"Secondary"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{palette:"success"},s.createElement(l(),{palette:"success",marginLeft:"$length.3",marginTop:"$length.3"},"Success"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{palette:"danger"},s.createElement(l(),{palette:"danger",marginLeft:"$length.3",marginTop:"$length.3"},"Danger"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{palette:"warning"},s.createElement(l(),{palette:"warning",marginLeft:"$length.3",marginTop:"$length.3"},"Warning"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{palette:"info"},s.createElement(l(),{palette:"info",marginLeft:"$length.3",marginTop:"$length.3"},"Info"),s.createElement("span",null,"Tooltip"))),title:"Palette"},second:{code:'import Button from \'@smart-react-components/ui/Button\'\nimport ButtonList from \'@smart-react-components/ui/Button/ButtonList\'\nimport Tooltip from \'@smart-react-components/ui/Tooltip\'\nimport React from \'react\'\n\nexport default () => (\n  <ButtonList>\n    <Tooltip isSoft>\n      <Button isSoft palette="!dynamic" marginLeft="$length.3" marginTop="$length.3">!Dynamic</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette="dynamic">\n      <Button isSoft palette="dynamic" marginLeft="$length.3" marginTop="$length.3">Dynamic</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette="primary">\n      <Button isSoft marginLeft="$length.3" marginTop="$length.3">Primary</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette="secondary">\n      <Button isSoft palette="secondary" marginLeft="$length.3" marginTop="$length.3">Secondary</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette="success">\n      <Button isSoft palette="success" marginLeft="$length.3" marginTop="$length.3">Success</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette="danger">\n      <Button isSoft palette="danger" marginLeft="$length.3" marginTop="$length.3">Danger</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette="warning">\n      <Button isSoft palette="warning" marginLeft="$length.3" marginTop="$length.3">Warning</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette="info">\n      <Button isSoft palette="info" marginLeft="$length.3" marginTop="$length.3">Info</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n  </ButtonList>\n)',output:s.createElement(i(),null,s.createElement(p(),{isSoft:!0},s.createElement(l(),{isSoft:!0,palette:"!dynamic",marginLeft:"$length.3",marginTop:"$length.3"},"!Dynamic"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{isSoft:!0,palette:"dynamic"},s.createElement(l(),{isSoft:!0,palette:"dynamic",marginLeft:"$length.3",marginTop:"$length.3"},"Dynamic"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{isSoft:!0,palette:"primary"},s.createElement(l(),{isSoft:!0,marginLeft:"$length.3",marginTop:"$length.3"},"Primary"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{isSoft:!0,palette:"secondary"},s.createElement(l(),{isSoft:!0,palette:"secondary",marginLeft:"$length.3",marginTop:"$length.3"},"Secondary"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{isSoft:!0,palette:"success"},s.createElement(l(),{isSoft:!0,palette:"success",marginLeft:"$length.3",marginTop:"$length.3"},"Success"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{isSoft:!0,palette:"danger"},s.createElement(l(),{isSoft:!0,palette:"danger",marginLeft:"$length.3",marginTop:"$length.3"},"Danger"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{isSoft:!0,palette:"warning"},s.createElement(l(),{isSoft:!0,palette:"warning",marginLeft:"$length.3",marginTop:"$length.3"},"Warning"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{isSoft:!0,palette:"info"},s.createElement(l(),{isSoft:!0,palette:"info",marginLeft:"$length.3",marginTop:"$length.3"},"Info"),s.createElement("span",null,"Tooltip"))),title:"Soft"}}),s.createElement(g.Z,{first:{code:'import Button from \'@smart-react-components/ui/Button\'\nimport ButtonList from \'@smart-react-components/ui/Button/ButtonList\'\nimport Tooltip from \'@smart-react-components/ui/Tooltip\'\nimport React from \'react\'\n\nexport default () => (\n  <ButtonList>\n    <Tooltip size="small">\n      <Button marginLeft="$length.3" marginTop="$length.3">Small</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip>\n      <Button marginLeft="$length.3" marginTop="$length.3">Medium</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip size="large">\n      <Button marginLeft="$length.3" marginTop="$length.3">Large</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip size="small" sizeMd="medium" sizeLg="large">\n      <Button marginLeft="$length.3" marginTop="$length.3">Responsive</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n  </ButtonList>\n)',output:s.createElement(i(),null,s.createElement(p(),{size:"small"},s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Small"),s.createElement("span",null,"Tooltip")),s.createElement(p(),null,s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Medium"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{size:"large"},s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Large"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{size:"small",sizeMd:"medium",sizeLg:"large"},s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Responsive"),s.createElement("span",null,"Tooltip"))),title:"Size"},second:{code:'import Button from \'@smart-react-components/ui/Button\'\nimport ButtonList from \'@smart-react-components/ui/Button/ButtonList\'\nimport Tooltip, { Position } from \'@smart-react-components/ui/Tooltip\'\nimport React from \'react\'\n\nexport default () => (\n  <ButtonList>\n    <Tooltip>\n      <Button marginLeft="$length.3" marginTop="$length.3">Top</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip position={Position.BOTTOM}>\n      <Button marginLeft="$length.3" marginTop="$length.3">Bottom</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip position={Position.LEFT}>\n      <Button marginLeft="$length.3" marginTop="$length.3">Left</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip position={Position.RIGHT}>\n      <Button marginLeft="$length.3" marginTop="$length.3">Right</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n  </ButtonList>\n)',output:s.createElement(i(),null,s.createElement(p(),null,s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Top"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{position:r.Position.BOTTOM},s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Bottom"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{position:r.Position.LEFT},s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Left"),s.createElement("span",null,"Tooltip")),s.createElement(p(),{position:r.Position.RIGHT},s.createElement(l(),{marginLeft:"$length.3",marginTop:"$length.3"},"Right"),s.createElement("span",null,"Tooltip"))),title:"Position"}}),s.createElement("h2",{id:"theme-attributes"},"Theme Attributes"),s.createElement(m.Z,{attrs:[{name:"fontFamily.tooltip",type:"string",description:s.createElement(s.Fragment,null,s.createElement("code",null,"font-family")," value.")},{name:"radius.tooltip",type:"string",description:s.createElement(s.Fragment,null,s.createElement("code",null,"border-radius")," value.")},{name:"transition.tooltipDuration",type:"number",description:"Duration in milliseconds."},{name:"zIndex.tooltip",type:"number",description:s.createElement(s.Fragment,null,s.createElement("code",null,"z-index")," value.")}]}),s.createElement("h2",{id:"size-attributes"},"Size Attributes"),s.createElement(m.Z,{attrs:[{name:"tooltip.fontSize",type:"string",description:s.createElement(s.Fragment,null,s.createElement("code",null,"font-size")," value.")},{name:"tooltip.padding",type:s.createElement(s.Fragment,null,s.createElement(u.Z,{to:"/api#coordinator"},"Coordinator"),"<string>"),description:s.createElement(s.Fragment,null,s.createElement("code",null,"padding")," value.")}]})),s.createElement(h.Z,{next:{label:"Wave Effect",to:"/ui-components/wave-effect"},prev:{label:"Textarea",to:"/ui-components/textarea"}})),s.createElement(f.Z,{list:[{label:"Tooltip",id:"tooltip"},{label:"Example",id:"example"},{label:"Theme Attributes",id:"theme-attributes"},{label:"Size Attributes",id:"size-attributes"}]})))},70611:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TriggerInteraction=t.Position=void 0;const l=o(n(8801)),a=o(n(67294)),i=n(80656),r=n(12788),p=o(n(90740)),s=o(n(69593)),m=o(n(48571)),c=n(18),u=n(17523),g=n(30199);var f=n(18);Object.defineProperty(t,"Position",{enumerable:!0,get:function(){return f.Position}}),Object.defineProperty(t,"TriggerInteraction",{enumerable:!0,get:function(){return f.TriggerInteraction}});const d=a.default.forwardRef((({afterHide:e,afterShow:t,beforeHide:n,beforeShow:o,children:f,hasHideAnimation:d=!0,hasShowAnimation:h=!0,hoverDelay:T,isDismissible:E,isSoft:$,palette:y="!dynamic",position:S=c.Position.TOP,setStatus:B,size:L="medium",sizeSm:b,sizeMd:w,sizeLg:z,sizeXl:v,space:P=0,status:C,transitionClassName:D,transitionDuration:x,triggerInteraction:Z=c.TriggerInteraction.CLICK|c.TriggerInteraction.HOVER},I)=>{var k;const R=a.default.useContext(r.ThemeContext),F=a.default.useRef(null),_=a.default.useRef(null),O=a.default.useRef(null),H=()=>{var e;return(null!==(e=null!=I?I:f[0].ref)&&void 0!==e?e:F).current},M=()=>null!=x?x:R.$.transition.tooltipDuration,{getStatus:V,handleBeforeShow:A}=(0,m.default)({beforeShow:o,boxEl:_,getTriggerEl:H,handlePosition:()=>(0,g.calculatePosition)(H(),_.current,null,O.current,S,P),hoverDelay:T,isDismissible:E,key:"tooltip",setStatus:B,status:C,triggerInteraction:Z}),W=a.default.createElement(l.default,{afterHide:e,afterShow:t,beforeHide:n,beforeShow:A,className:null!=D?D:"src-tooltip",duration:M(),hasHideAnimation:d,hasShowAnimation:h,status:V()},a.default.createElement(p.default,{duration:M(),hasTransition:!D,isSoft:$,palette:y,tooltipSize:L,tooltipSizeSm:b,tooltipSizeMd:w,tooltipSizeLg:z,tooltipSizeXl:v,ref:_},f[1],a.default.createElement(s.default,{ref:O})));return a.default.createElement(a.default.Fragment,null,a.default.cloneElement(f[0],{ref:null!==(k=null!=I?I:f[0].ref)&&void 0!==k?k:F}),(0,u.canBeRenderedInPortal)()?(0,i.createPortal)(W,document.body):W)}));t.default=d},90740:function(e,t,n){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(92851)),a=o(n(12788)),i=o(n(69593)),r=n(30199);t.default=(0,a.default)(l.default).attrs({getTooltipSize:(e,t)=>`\n    font-size: ${t.$.size.tooltip[e].fontSize};\n    padding: ${t.$.size.tooltip[e].padding.y} ${t.$.size.tooltip[e].padding.x};\n  `})((({theme:e,duration:t,hasTransition:n,isSoft:o,palette:l})=>`\n  border-radius: ${e.$.radius.tooltip};\n  box-shadow: 0 0 10px 1px ${e.$.palette[l].shadow};\n  box-sizing: border-box;\n  font-family: ${e.$.fontFamily.tooltip};\n  position: fixed;\n  z-index: ${e.$.zIndex.tooltip};\n\n  ${o?`\n      background: ${e.$.palette[l].soft};\n      color: ${e.$.palette[l].softFont};\n      fill: ${e.$.palette[l].softFont};\n      font-weight: ${e.$.fontWeight.bold};\n\n      ${i.default} {\n        fill: ${e.$.palette[l].soft};\n        stroke: ${e.$.palette[l].soft};\n      }\n    `:`\n      background: ${e.$.palette[l].main};\n      color: ${e.$.palette[l].font};\n      fill: ${e.$.palette[l].font};\n\n      ${i.default} {\n        fill: ${e.$.palette[l].main};\n        stroke: ${e.$.palette[l].main};\n      }\n    `}\n\n  ${n?(0,r.generateCSSTransitionClasses)("tooltip",t):""}\n`))}}]);