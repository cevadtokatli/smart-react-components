{"version":3,"file":"2c59dd029464906cfdd6.js","mappings":"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","sources":["webpack://smart-react-components-page/./src/containers/Textarea.tsx"],"sourcesContent":["import B from '@smart-react-components/core/Element/B';\nimport P from '@smart-react-components/core/Element/P';\nimport Svg from '@smart-react-components/core/Element/Svg';\nimport TextareaComponent from '@smart-react-components/ui/Textarea';\nimport TextareaAddon from '@smart-react-components/ui/Textarea/TextareaAddon';\nimport React from 'react';\nimport ComponentType from '../components/ComponentType';\nimport LabelLink from '../components/LabelLink';\nimport MultiExample from '../components/MultiExample';\nimport Navbar from '../components/Nav';\nimport PropsTable from '../components/PropsTable';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Blockquote from '../elements/Blockquote';\nimport Content from '../elements/Content';\nimport Page from '../elements/Page';\nimport usePage from '../hooks/usePage';\nimport AttributesTable from '../components/AttributesTable';\nconst TextareaStatefulExample = () => {\n    const [value, setValue] = React.useState('');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TextareaComponent, { placeholder: \"Stateful Textarea...\", value: value, setValue: setValue }),\n        React.createElement(P, { marginTop: \"$length.3\" },\n            React.createElement(B, { fontWeight: \"$fontWeight.semibold\" }, \"Textarea :\"),\n            \" \",\n            value)));\n};\nconst TextareaStatelessExample = () => {\n    const spanEl = React.useRef(null);\n    const handleChange = e => spanEl.current.innerHTML = e.target.value;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TextareaComponent, { placeholder: \"Stateless Textarea...\", onChange: handleChange }),\n        React.createElement(P, { marginTop: \"$length.3\" },\n            React.createElement(B, { fontWeight: \"$fontWeight.semibold\" }, \"Textarea :\"),\n            \" \",\n            React.createElement(\"span\", { ref: spanEl }))));\n};\nconst Textarea = () => {\n    usePage({ title: 'Textarea' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"textarea\" }, \"Textarea\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Imitates \",\n                    React.createElement(\"code\", null, \"textarea\"),\n                    \" element.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'value',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Textarea \",\n                                React.createElement(\"code\", null, \"value\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'setValue',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"value\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'defaultValue',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Default value. It is useful for stateless components, \",\n                                React.createElement(\"code\", null, \"onChange\"),\n                                \" is required when the textarea is stateless.\")\n                        },\n                        {\n                            name: 'label',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            description: 'Textarea label.',\n                        },\n                        {\n                            name: 'placeholder',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"textarea\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"placeholder\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'isDisabled',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"textarea\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"disabled\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'isReadOnly',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"textarea\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"readonly\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'isRequired',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"textarea\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"required\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'resize',\n                            type: 'StyledProps.Resize',\n                            defaultValue: 'none',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"textarea\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"resize\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'areaMaxHeight',\n                            type: 'number',\n                            defaultValue: '350',\n                            description: React.createElement(React.Fragment, null,\n                                \"Textarea resizes the element accoding to \",\n                                React.createElement(\"code\", null, \"value\"),\n                                \". This prop indicates the max height value it can hold.\"),\n                        },\n                        {\n                            name: 'areaMinHeight',\n                            type: 'number',\n                            defaultValue: '150',\n                            description: React.createElement(React.Fragment, null,\n                                \"Textarea resizes the element accoding to \",\n                                React.createElement(\"code\", null, \"value\"),\n                                \". This prop indicates the min height value it can hold.\"),\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            defaultValue: 'primary',\n                            description: 'Palette item key.',\n                        },\n                        {\n                            name: 'isOutline',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Removes the background color.',\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Uses the soft colors in the palette.',\n                        },\n                        {\n                            name: 'size',\n                            type: React.createElement(LabelLink, { to: \"/api#size-prop\" }, \"SizeProp\"),\n                            defaultValue: 'medium',\n                            description: 'Textarea size, has responsive support.',\n                        },\n                        {\n                            name: 'shape',\n                            type: React.createElement(LabelLink, { to: \"/api#shape-prop\" }, \"ShapeProp\"),\n                            defaultValue: 'rectangle',\n                            description: 'Textarea shape.',\n                        },\n                        {\n                            name: 'hasBorder',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Adds border to the textarea.',\n                        },\n                        {\n                            name: 'isBlock',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Sets the textarea as block element.',\n                        },\n                        {\n                            name: 'leftAddon',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            description: 'Left addon element.',\n                        },\n                        {\n                            name: 'rightAddon',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            description: 'Right addon element.',\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Textarea provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#intrinsic-styled-core-props\" }, \"Intrinsic Styled Core Props\"),\n                    \" for the container element; \",\n                    React.createElement(LabelLink, { to: \"/element-props#change-events\" }, \"ChangeEvents\"),\n                    \", \",\n                    React.createElement(LabelLink, { to: \"/element-props#focus-events\" }, \"FocusEvents\"),\n                    \", and \",\n                    React.createElement(LabelLink, { to: \"/element-props#keyboard-events\" }, \"KeyboardEvents\"),\n                    \" for the \",\n                    React.createElement(\"code\", null, \"textarea\"),\n                    \" element.\"),\n                React.createElement(Blockquote, null,\n                    \"Textarea provides \",\n                    React.createElement(\"code\", null, \"forwardRef\"),\n                    \" to the \",\n                    React.createElement(\"code\", null, \"textarea\"),\n                    \" element.\"),\n                React.createElement(\"h2\", { id: \"textarea-addon\" }, \"Textarea Addon\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Textarea Addon is rendered only under \",\n                    React.createElement(LabelLink, { to: \"/ui-components/textarea#textarea\" }, \"Textarea\"),\n                    \". Each textarea can have up to 2 addons as left and right.\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            isRequired: true,\n                            description: 'Textarea Addon content.',\n                        },\n                        {\n                            name: 'isSeparated',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Sets the addon as a seprate element from the textarea.',\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            description: 'Palette item key.',\n                        },\n                        {\n                            name: 'isOutline',\n                            type: 'boolean',\n                            description: 'Removes the background color.',\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            description: 'Uses the soft colors in the palette.',\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Textarea Addon provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#click-events\" }, \"Click Events\"),\n                    \" for the addon element.\"),\n                React.createElement(\"h2\", { id: \"example\" }, \"Example\"),\n                React.createElement(MultiExample, { first: {\n                        code: `import B from '@smart-react-components/core/Element/B'\nimport P from '@smart-react-components/core/Element/P'\nimport Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => {\n  const [value, setValue] = React.useState('')\n\n  return (\n    <>\n      <Textarea placeholder=\"Stateful Textarea...\" value={value} setValue={setValue} />\n      <P marginTop=\"$length.3\"><B fontWeight=\"$fontWeight.semibold\">Textarea :</B> {value}</P>\n    </>\n  )\n}`,\n                        output: React.createElement(TextareaStatefulExample, null),\n                        title: 'Stateful Component',\n                    }, second: {\n                        code: `import B from '@smart-react-components/core/Element/B'\nimport P from '@smart-react-components/core/Element/P'\nimport Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => {\n  const spanEl = React.useRef<HTMLSpanElement>(null)\n\n  const handleChange = e => spanEl.current.innerHTML = e.target.value\n\n  return (\n    <>\n      <Textarea placeholder=\"Stateless Textarea...\" onChange={handleChange} />\n      <P marginTop=\"$length.3\"><B fontWeight=\"$fontWeight.semibold\">Textarea :</B> <span ref={spanEl} /></P>\n    </>\n  )\n}`,\n                        output: React.createElement(TextareaStatelessExample, null),\n                        title: 'Stateless Component',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <Textarea placeholder=\"Primary...\" isOutline={false} />\n    <Textarea placeholder=\"Secondary...\" palette=\"secondary\" isOutline={false} marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Success...\" palette=\"success\" isOutline={false} marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Danger...\" palette=\"danger\" isOutline={false} marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Warning...\" palette=\"warning\" isOutline={false} marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Info...\" palette=\"info\" isOutline={false} marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Light...\" palette=\"light\" isOutline={false} marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Dark...\" palette=\"dark\" isOutline={false} marginTop=\"$length.3\" />\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Primary...\", isOutline: false }),\n                            React.createElement(TextareaComponent, { placeholder: \"Secondary...\", palette: \"secondary\", isOutline: false, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Success...\", palette: \"success\", isOutline: false, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Danger...\", palette: \"danger\", isOutline: false, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Warning...\", palette: \"warning\", isOutline: false, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Info...\", palette: \"info\", isOutline: false, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Light...\", palette: \"light\", isOutline: false, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Dark...\", palette: \"dark\", isOutline: false, marginTop: \"$length.3\" }))),\n                        title: 'Palette',\n                    }, second: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <Textarea placeholder=\"Primary...\" />\n    <Textarea placeholder=\"Secondary...\" palette=\"secondary\" marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Success...\" palette=\"success\" marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Danger...\" palette=\"danger\" marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Warning...\" palette=\"warning\" marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Info...\" palette=\"info\" marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Light...\" palette=\"light\" marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Dark...\" palette=\"dark\" marginTop=\"$length.3\" />      \n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Primary...\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Secondary...\", palette: \"secondary\", marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Success...\", palette: \"success\", marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Danger...\", palette: \"danger\", marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Warning...\", palette: \"warning\", marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Info...\", palette: \"info\", marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Light...\", palette: \"light\", marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Dark...\", palette: \"dark\", marginTop: \"$length.3\" }))),\n                        title: 'Outline',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <Textarea placeholder=\"Primary...\" isOutline={false} isSoft />\n    <Textarea placeholder=\"Secondary...\" palette=\"secondary\" isOutline={false} isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Success...\" palette=\"success\" isOutline={false} isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Danger...\" palette=\"danger\" isOutline={false} isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Warning...\" palette=\"warning\" isOutline={false} isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Info...\" palette=\"info\" isOutline={false} isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Light...\" palette=\"light\" isOutline={false} isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Dark...\" palette=\"dark\" isOutline={false} isSoft marginTop=\"$length.3\" />\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Primary...\", isOutline: false, isSoft: true }),\n                            React.createElement(TextareaComponent, { placeholder: \"Secondary...\", palette: \"secondary\", isOutline: false, isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Success...\", palette: \"success\", isOutline: false, isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Danger...\", palette: \"danger\", isOutline: false, isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Warning...\", palette: \"warning\", isOutline: false, isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Info...\", palette: \"info\", isOutline: false, isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Light...\", palette: \"light\", isOutline: false, isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Dark...\", palette: \"dark\", isOutline: false, isSoft: true, marginTop: \"$length.3\" }))),\n                        title: 'Soft',\n                    }, second: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <Textarea placeholder=\"Primary...\" isSoft />\n    <Textarea placeholder=\"Secondary...\" palette=\"secondary\" isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Success...\" palette=\"success\" isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Danger...\" palette=\"danger\" isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Warning...\" palette=\"warning\" isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Info...\" palette=\"info\" isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Light...\" palette=\"light\" isSoft marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Dark...\" palette=\"dark\" isSoft marginTop=\"$length.3\" />      \n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Primary...\", isSoft: true }),\n                            React.createElement(TextareaComponent, { placeholder: \"Secondary...\", palette: \"secondary\", isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Success...\", palette: \"success\", isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Danger...\", palette: \"danger\", isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Warning...\", palette: \"warning\", isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Info...\", palette: \"info\", isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Light...\", palette: \"light\", isSoft: true, marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Dark...\", palette: \"dark\", isSoft: true, marginTop: \"$length.3\" }))),\n                        title: 'Soft Outline',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <Textarea placeholder=\"Small...\" size=\"small\" />\n    <Textarea placeholder=\"Medium...\" marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Large...\" size=\"large\" marginTop=\"$length.3\" />\n    <Textarea placeholder=\"Responsive...\" size=\"small\" sizeMd=\"medium\" sizeLg=\"large\" marginTop=\"$length.3\" />\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Small...\", size: \"small\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Medium...\", marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Large...\", size: \"large\", marginTop: \"$length.3\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Responsive...\", size: \"small\", sizeMd: \"medium\", sizeLg: \"large\", marginTop: \"$length.3\" }))),\n                        title: 'Size',\n                    }, second: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <Textarea placeholder=\"Block...\" label=\"Block\" />\n    <Textarea placeholder=\"Inline...\" label=\"Inline\" isBlock={false} marginTop=\"$length.3\" />\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Block...\", label: \"Block\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Inline...\", label: \"Inline\", isBlock: false, marginTop: \"$length.3\" }))),\n                        title: 'Block',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => (\n<>\n  <Textarea placeholder=\"Rectangle...\" />\n  <Textarea placeholder=\"Rounded...\" shape=\"rounded\" marginTop=\"$length.3\" />\n</>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Rectangle...\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Rounded...\", shape: \"rounded\", marginTop: \"$length.3\" }))),\n                        title: 'Shape',\n                    }, second: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <Textarea placeholder=\"Bordered...\" />\n    <Textarea placeholder=\"Borderless...\" hasBorder={false} marginTop=\"$length.3\" />\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Bordered...\" }),\n                            React.createElement(TextareaComponent, { placeholder: \"Borderless...\", hasBorder: false, marginTop: \"$length.3\" }))),\n                        title: 'Border',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Svg from '@smart-react-components/core/Element/Svg'\nimport Textarea from '@smart-react-components/ui/Textarea'\nimport TextareaAddon from '@smart-react-components/ui/Textarea/TextareaAddon'\nimport React from 'react'\n\nexport default () => (\n  <>\n    <Textarea\n      placeholder=\"Email...\"\n      leftAddon={(\n        <TextareaAddon isOutline={false}>\n          <Svg viewBox=\"0 0 24 24\">\n            <path d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\" /><path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          </Svg>\n        </TextareaAddon>\n      )}\n      rightAddon={<TextareaAddon isOutline={false}>@hotmail.com</TextareaAddon>}\n    />\n    <Textarea\n      placeholder=\"Search...\"\n      marginTop=\"$length.3\"\n      rightAddon={(\n        <Svg viewBox=\"0 0 24 24\" fill=\"$color.gray500\">\n          <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" /><path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        </Svg>\n      )}\n    />\n  </>\n)`,\n                        output: (React.createElement(React.Fragment, null,\n                            React.createElement(TextareaComponent, { placeholder: \"Email...\", leftAddon: (React.createElement(TextareaAddon, { isOutline: false },\n                                    React.createElement(Svg, { viewBox: \"0 0 24 24\" },\n                                        React.createElement(\"path\", { d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\" }),\n                                        React.createElement(\"path\", { d: \"M0 0h24v24H0z\", fill: \"none\" })))), rightAddon: React.createElement(TextareaAddon, { isOutline: false }, \"@hotmail.com\") }),\n                            React.createElement(TextareaComponent, { placeholder: \"Search...\", marginTop: \"$length.3\", rightAddon: (React.createElement(Svg, { viewBox: \"0 0 24 24\", fill: \"$color.gray500\" },\n                                    React.createElement(\"path\", { d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" }),\n                                    React.createElement(\"path\", { d: \"M0 0h24v24H0z\", fill: \"none\" }))) }))),\n                        title: 'Addon',\n                    }, second: {\n                        code: `import Textarea from '@smart-react-components/ui/Textarea'\nimport React from 'react'\n\nexport default () => <Textarea  placeholder=\"Disabled...\" isDisabled />`,\n                        output: React.createElement(TextareaComponent, { placeholder: \"Disabled...\", isDisabled: true }),\n                        title: 'Disabled',\n                    } }),\n                React.createElement(\"h2\", { id: \"theme-attributes\" }, \"Theme Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'fontFamily.form',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Label \",\n                                React.createElement(\"code\", null, \"font-family\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'fontFamily.input',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Textarea \",\n                                React.createElement(\"code\", null, \"font-family\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'opacity.formDisabled',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"opacity\"),\n                                \" value when \",\n                                React.createElement(\"code\", null, \"isDisabled\"),\n                                \" is \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'opacity.inputPlaceholder',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                \"Textarea placeholder \",\n                                React.createElement(\"code\", null, \"opacity\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'radius.input',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#shape\" }, \"Shape\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"border-radius\"),\n                                \" value. Used by \",\n                                React.createElement(\"code\", null, \"shape\"),\n                                \" prop.\"),\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"size-attributes\" }, \"Size Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'cursor.input',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Label \",\n                                React.createElement(\"code\", null, \"cursor\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'cursor.inputAddonClickable',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/textarea#textarea-addon\" }, \"Textarea Addon\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"cursor\"),\n                                \" value when it is separated and clickable.\"),\n                        },\n                        {\n                            name: 'form.blockLabel.fontSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Label \",\n                                React.createElement(\"code\", null, \"font-size\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'form.blockLabel.margin',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Label \",\n                                React.createElement(\"code\", null, \"margin\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'input.fontSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Textarea \",\n                                React.createElement(\"code\", null, \"font-size\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'input.padding',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#coordinator\" }, \"Coordinator\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"Textarea \",\n                                React.createElement(\"code\", null, \"padding\"),\n                                \" value.\"),\n                        },\n                    ] })),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Tooltip',\n                    to: '/ui-components/tooltip',\n                }, prev: {\n                    label: 'Table',\n                    to: '/ui-components/table',\n                } })),\n        React.createElement(Navbar, { list: [\n                { label: 'Textarea', id: 'textarea' },\n                { label: 'Textarea Addon', id: 'textarea-addon' },\n                { label: 'Example', id: 'example' },\n                { label: 'Theme Attributes', id: 'theme-attributes' },\n                { label: 'Size Attributes', id: 'size-attributes' },\n            ] })));\n};\nexport default Textarea;\n"],"names":[],"sourceRoot":""}