{"version":3,"file":"b843069ca50b03db0fee.js","mappings":"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AyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB,gBAAgB,0DAAmB,SAAS,yBAAyB;AACrE,gBAAgB,0DAAmB,CAAC,iEAAa;AACjD,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB,CAAC,+DAAU,IAAI;AAClD;AACA;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E,gCAAgC,0DAAmB,CAAC,6DAAS,IAAI,6CAA6C;AAC9G;AACA,yBAAyB;AACzB;AACA;AACA,kCAAkC,0DAAmB,CAAC,6DAAS,IAAI,4BAA4B;AAC/F;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB,gBAAgB,0DAAmB,SAAS,2BAA2B;AACvE,gBAAgB,0DAAmB,CAAC,iEAAa,IAAI,gBAAgB;AACrE,gBAAgB,0DAAmB;AACnC,gBAAgB,0DAAmB,SAAS,eAAe;AAC3D,gBAAgB,0DAAmB,CAAC,iEAAY,IAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,IAAI;AAC1E;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,mDAAmD,MAAM;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,iDAAiD,MAAM;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,gDAAgD,MAAM;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,iDAAiD,MAAM;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0DAAmB,CAAC,4EAAiB;AACjE,gCAAgC,0DAAmB,CAAC,iFAAG,IAAI,mDAAmD;AAC9G;AACA,oCAAoC,0DAAmB,CAAC,8FAAiB,IAAI,+EAA+E;AAC5J,gCAAgC,0DAAmB,CAAC,yFAAY,IAAI,mCAAmC;AACvG,oCAAoC,0DAAmB,CAAC,6FAAgB,IAAI,qBAAqB;AACjG,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,oCAAoC,0DAAmB,CAAC,6FAAgB,IAAI,qBAAqB;AACjG,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,IAAI;AAC1E;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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AY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,oCAAoC,0DAAmB,CAAC,6FAAgB,IAAI,qBAAqB;AACjG,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE;AACA,uBAAuB;AACvB,gBAAgB,0DAAmB,CAAC,iEAAY,IAAI;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,IAAI;AAC1E;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,0DAA0D,MAAM;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,wDAAwD,MAAM;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,uDAAuD,MAAM;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,wDAAwD,MAAM;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,qDAAqD,MAAM;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA,sDAAsD,MAAM;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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AoC,0DAAmB,CAAC,6FAAgB,IAAI,qBAAqB;AACjG,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE,wCAAwC,0DAAmB,CAAC,yFAAY;AACxE;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sEAAsE,IAAI;AAC1E;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA,mGAAmG,GAAG;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,0DAAmB,CAAC,iFAAG,IAAI,0EAA0E;AACtI,4BAA4B,0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","sources":["webpack://smart-react-components-page/./src/containers/Dropdown.tsx"],"sourcesContent":["import Div from '@smart-react-components/core/Element/Div';\nimport DropdownComponent, { Position, TriggerInteraction } from '@smart-react-components/ui/Dropdown';\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon';\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory';\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem';\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList';\nimport React from 'react';\nimport AttributesTable from '../components/AttributesTable';\nimport ComponentType from '../components/ComponentType';\nimport LabelLink from '../components/LabelLink';\nimport Nav from '../components/Nav';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Content from '../elements/Content';\nimport Page from '../elements/Page';\nimport usePage from '../hooks/usePage';\nimport PropsTable from '../components/PropsTable';\nimport MultiExample from '../components/MultiExample';\nconst Dropdown = () => {\n    usePage({ title: 'Dropdown' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"dropdown\" }, \"Dropdown\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Core container component which uses \",\n                    React.createElement(LabelLink, { to: \"/ui-components/fixed-box\" }, \"Fixed Box\"),\n                    \" takes trigger element and \",\n                    React.createElement(LabelLink, { to: \"/ui-components/dropdown#dropdown-list\" }, \"Dropdown List\"),\n                    \" as children.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: '[JSX.Element, JSX.Element]',\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null,\n                                \"The first element for the toggle element, and the second element for \",\n                                React.createElement(LabelLink, { to: \"/ui-components/dropdown#dropdown-list\" }, \"Dropdown List\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'status',\n                            type: 'boolean',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/dropdown#dropdown-list\" }, \"Dropdown List\"),\n                                \" display status.\"),\n                        },\n                        {\n                            name: 'setStatus',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<boolean>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"status\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'position',\n                            type: React.createElement(LabelLink, { to: \"/api#position\" }, \"Position\"),\n                            defaultValue: 'BOTTOM',\n                            description: 'Position of the box element by the toggle element. If the box element gets overflown in the given position, it is rendered at another available position.',\n                        },\n                        {\n                            name: 'minWidth',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                \"The box element \",\n                                React.createElement(\"code\", null, \"min-width\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'maxWidth',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                \"The box element \",\n                                React.createElement(\"code\", null, \"max-width\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'space',\n                            type: 'number',\n                            defaultValue: '0',\n                            description: 'Space between the toggle and the box element.',\n                        },\n                        {\n                            name: 'triggerInteraction',\n                            type: React.createElement(LabelLink, { to: \"/api#trigger-interaction\" }, \"TriggerInteraction\"),\n                            defaultValue: 'CLICK',\n                            description: React.createElement(React.Fragment, null,\n                                \"Calls \",\n                                React.createElement(\"code\", null, \"setStatus\"),\n                                \" with \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \" param when the toggle element is interracted with the given interaction.\"),\n                        },\n                        {\n                            name: 'isDismissible',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"The \",\n                                React.createElement(\"code\", null, \"window\"),\n                                \" click calls \",\n                                React.createElement(\"code\", null, \"setStatus\"),\n                                \" with \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \" param.\"),\n                        },\n                        {\n                            name: 'breakpoint',\n                            type: React.createElement(LabelLink, { to: \"/api#breakpoint\" }, \"Breakpoint\"),\n                            defaultValue: 'medium',\n                            description: 'When given, displays the box inside an overlay when only the window\\'s width is equal or smaller than the given breakpoint width.',\n                        },\n                        {\n                            name: 'transitionClassName',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Transition \",\n                                React.createElement(\"code\", null, \"className\"),\n                                \" prefix.\"),\n                        },\n                        {\n                            name: 'transitionDuration',\n                            type: 'number',\n                            description: 'Transition duration in milliseconds.',\n                        },\n                        {\n                            name: 'hasShowAnimation',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"When \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \", skips the show animation.\"),\n                        },\n                        {\n                            name: 'hasHideAnimation',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"When \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \", skips the hide animation.\"),\n                        },\n                        {\n                            name: 'beforeShow',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-before-callback\" }, \"TransitionBeforeCallback\"),\n                            description: 'Called before the show transition is started; right after the component is mounted and element is rendered in the DOM.',\n                        },\n                        {\n                            name: 'beforeHide',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-before-callback\" }, \"TransitionBeforeCallback\"),\n                            description: 'Called before the hide transition is started.',\n                        },\n                        {\n                            name: 'afterShow',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-after-callback\" }, \"TransitionAfterCallback\"),\n                            description: 'Called after the show transition is completed.',\n                        },\n                        {\n                            name: 'afterHide',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-after-callback\" }, \"TransitionAfterCallback\"),\n                            description: 'Called after the hide transition is completed; the component is unmounted and element is removed from the DOM.',\n                        },\n                        {\n                            name: 'elementProps',\n                            type: React.createElement(LabelLink, { to: \"/api#jsx-element-props\" }, \"JSXElementProps\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/fixed-box\" }, \"Fixed Box\"),\n                                \" element \",\n                                React.createElement(LabelLink, { to: \"/api#styled-props\" }, \"Styled Props\"),\n                                \".\"),\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"dropdown-list\" }, \"Dropdown List\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"The list element of \",\n                    React.createElement(LabelLink, { to: \"/ui-components/dropdown#dropdown\" }, \"Dropdown\"),\n                    \".\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: 'JSX.Element | JSX.Element[]',\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null, \"The list items.\"),\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            defaultValue: 'primary',\n                            description: 'Palette item key.',\n                        },\n                        {\n                            name: 'isOutline',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Removes the background color.',\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Uses the soft colors in the palette.',\n                        },\n                        {\n                            name: 'size',\n                            type: React.createElement(LabelLink, { to: \"/api#size-prop\" }, \"SizeProp\"),\n                            defaultValue: 'medium',\n                            description: 'Dropdown size, has responsive support.',\n                        },\n                        {\n                            name: 'hasHover',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"Enables hover effect on \",\n                                React.createElement(LabelLink, { to: \"/ui-components/dropdown#dropdown-item\" }, \"Dropdown Items\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'hasWaveEffect',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"Enables \",\n                                React.createElement(LabelLink, { to: \"/ui-components/wave-effect\" }, \"Wave Effect\"),\n                                \" on \",\n                                React.createElement(LabelLink, { to: \"/ui-components/dropdown#dropdown-item\" }, \"Dropdown Items\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'waveEffectPalette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/wave-effect\" }, \"Wave Effect\"),\n                                \" palette item key.\"),\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"dropdown-item\" }, \"Dropdown Item\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"Single dropdown item in the list.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            isRequired: true,\n                            description: 'Item content.',\n                        },\n                        {\n                            name: 'onClick',\n                            type: '(e: React.MouseEvent<HTMLElement>) => void | Promise<void>',\n                            description: React.createElement(React.Fragment, null,\n                                \"Invoked when the item is clicked on if \",\n                                React.createElement(\"code\", null, \"isDisabled\"),\n                                \" is \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \". If event is not prevented, closes the dropdown afterwards.\"),\n                        },\n                        {\n                            name: 'isDisabled',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Disables the item.',\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"dropdown-category\" }, \"Dropdown Category\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"Single category item in the list.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: 'JSX.Element | JSX.Element[]',\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/dropdown#dropdown-item\" }, \"Dropdown Item\"),\n                                \" elements.\"),\n                        },\n                        {\n                            name: 'label',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            isRequired: true,\n                            description: 'Category label.',\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"dropdown-arrow-icon\" }, \"Dropdown Arrow Icon\"),\n                React.createElement(ComponentType, { isStyled: true }),\n                React.createElement(\"p\", null, \"Icon element for the toggle element.\"),\n                React.createElement(\"h2\", { id: \"example\" }, \"Example\"),\n                React.createElement(MultiExample, { first: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Dropdown from '@smart-react-components/ui/Dropdown'\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon'\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory'\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem'\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList'\nimport React from 'react'\n\nexport default () => (\n  <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" margin={-10}>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Primary\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Secondary\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"secondary\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Success\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"success\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Danger\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"danger\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Warning\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"warning\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Info\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"info\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Light\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"light\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Dark\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"dark\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n  </Div>\n)`,\n                        output: (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", margin: -10 },\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Primary\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Secondary\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"secondary\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Success\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"success\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Danger\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"danger\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Warning\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"warning\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Info\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"info\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Light\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"light\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Dark\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"dark\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))))),\n                        title: 'Palette',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Dropdown from '@smart-react-components/ui/Dropdown'\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon'\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory'\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem'\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList'\nimport React from 'react'\n\nexport default () => (\n  <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" margin={-10}>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Primary\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Secondary\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"secondary\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Success\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"success\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Danger\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"danger\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Warning\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"warning\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Info\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"info\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Light\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"light\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Dark\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList palette=\"dark\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n  </Div>\n)`,\n                        output: (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", margin: -10 },\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Primary\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, null,\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Secondary\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"secondary\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Success\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"success\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Danger\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"danger\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Warning\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"warning\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Info\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"info\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Light\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"light\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Dark\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { palette: \"dark\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))))),\n                        title: 'Outline',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Dropdown from '@smart-react-components/ui/Dropdown'\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon'\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory'\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem'\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList'\nimport React from 'react'\n\nexport default () => (\n  <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" margin={-10}>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Primary\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Secondary\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"secondary\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Success\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"success\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Danger\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"danger\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Warning\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"warning\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Info\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"info\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Light\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"light\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Dark\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"dark\" isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n  </Div>\n)`,\n                        output: (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", margin: -10 },\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Primary\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Secondary\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"secondary\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Success\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"success\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Danger\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"danger\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Warning\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"warning\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Info\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"info\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Light\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"light\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Dark\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"dark\", isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))))),\n                        title: 'Soft',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Dropdown from '@smart-react-components/ui/Dropdown'\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon'\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory'\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem'\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList'\nimport React from 'react'\n\nexport default () => (\n  <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" margin={-10}>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Primary\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Secondary\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"secondary\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Success\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"success\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Danger\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"danger\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Warning\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"warning\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Info\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"info\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Light\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"light\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Dark\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft palette=\"dark\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n  </Div>\n)`,\n                        output: (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", margin: -10 },\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Primary\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Secondary\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"secondary\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Success\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"success\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Danger\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"danger\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Warning\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"warning\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Info\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"info\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Light\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"light\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Dark\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true, palette: \"dark\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))))),\n                        title: 'Soft Outline',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Dropdown from '@smart-react-components/ui/Dropdown'\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon'\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory'\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem'\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList'\nimport React from 'react'\n\nexport default () => (\n  <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" margin={-10}>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Small\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList size=\"small\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Medium\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Large\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList size=\"large\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Responsive\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList size=\"small\" sizeMd=\"medium\" sizeLg=\"large\">\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n  </Div>\n)`,\n                        output: (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", margin: -10 },\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Small\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { size: \"small\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Medium\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, null,\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Large\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { size: \"large\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Responsive\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { size: \"small\", sizeMd: \"medium\", sizeLg: \"large\" },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))))),\n                        title: 'Size',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Dropdown from '@smart-react-components/ui/Dropdown'\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon'\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory'\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem'\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList'\nimport React from 'react'\n\nexport default () => (\n  <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" margin={-10}>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Label\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem isDisabled>Item A-1</DropdownItem>\n          <DropdownItem isDisabled>Item A-2</DropdownItem>\n          <DropdownItem isDisabled>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem isDisabled>Item B-1</DropdownItem>\n          <DropdownItem isDisabled>Item B-2</DropdownItem>\n          <DropdownItem isDisabled>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Label\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isOutline={false}>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem isDisabled>Item A-1</DropdownItem>\n          <DropdownItem isDisabled>Item A-2</DropdownItem>\n          <DropdownItem isDisabled>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem isDisabled>Item B-1</DropdownItem>\n          <DropdownItem isDisabled>Item B-2</DropdownItem>\n          <DropdownItem isDisabled>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n  </Div>\n)`,\n                        output: (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", margin: -10 },\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Label\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-1\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-2\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-1\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-2\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Label\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isOutline: false },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-1\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-2\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-1\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-2\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-3\")))))),\n                        title: 'Disabled',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Dropdown, { Position } from '@smart-react-components/ui/Dropdown'\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon'\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory'\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem'\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList'\nimport React from 'react'\n\nexport default () => (\n  <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" margin={-10}>\n    <Dropdown>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Bottom\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown position={Position.TOP}>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Top\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown position={Position.LEFT}>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Left\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown position={Position.RIGHT}>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Right\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem>Item A-1</DropdownItem>\n          <DropdownItem>Item A-2</DropdownItem>\n          <DropdownItem>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem>Item B-1</DropdownItem>\n          <DropdownItem>Item B-2</DropdownItem>\n          <DropdownItem>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n  </Div>\n)`,\n                        output: (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", margin: -10 },\n                            React.createElement(DropdownComponent, null,\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Bottom\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, null,\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, { position: Position.TOP },\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Top\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, null,\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, { position: Position.LEFT },\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Left\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, null,\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, { position: Position.RIGHT },\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Right\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, null,\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, null, \"Item A-1\"),\n                                        React.createElement(DropdownItem, null, \"Item A-2\"),\n                                        React.createElement(DropdownItem, null, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, null, \"Item B-1\"),\n                                        React.createElement(DropdownItem, null, \"Item B-2\"),\n                                        React.createElement(DropdownItem, null, \"Item B-3\")))))),\n                        title: 'Position',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Dropdown, { TriggerInteraction } from '@smart-react-components/ui/Dropdown'\nimport DropdownArrowIcon from '@smart-react-components/ui/Dropdown/DropdownArrowIcon'\nimport DropdownCategory from '@smart-react-components/ui/Dropdown/DropdownCategory'\nimport DropdownItem from '@smart-react-components/ui/Dropdown/DropdownItem'\nimport DropdownList from '@smart-react-components/ui/Dropdown/DropdownList'\nimport React from 'react'\n\nexport default () => (\n  <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" margin={-10}>\n    <Dropdown triggerInteraction={TriggerInteraction.CLICK | TriggerInteraction.HOVER}>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Click + Hover\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList isSoft>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem isDisabled>Item A-1</DropdownItem>\n          <DropdownItem isDisabled>Item A-2</DropdownItem>\n          <DropdownItem isDisabled>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem isDisabled>Item B-1</DropdownItem>\n          <DropdownItem isDisabled>Item B-2</DropdownItem>\n          <DropdownItem isDisabled>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n    <Dropdown triggerInteraction={TriggerInteraction.RIGHT_CLICK}>\n      <Div alignItems=\"center\" display=\"flex\" margin={10}>\n        Right Click\n        <DropdownArrowIcon fill=\"$color.dynamic.bodyFont\" iconSize=\"$size.icon.medium\" marginLeft={5} />\n      </Div>\n      <DropdownList>\n        <DropdownCategory label=\"Category A\">\n          <DropdownItem isDisabled>Item A-1</DropdownItem>\n          <DropdownItem isDisabled>Item A-2</DropdownItem>\n          <DropdownItem isDisabled>Item A-3</DropdownItem>\n        </DropdownCategory>\n        <DropdownCategory label=\"Category B\">\n          <DropdownItem isDisabled>Item B-1</DropdownItem>\n          <DropdownItem isDisabled>Item B-2</DropdownItem>\n          <DropdownItem isDisabled>Item B-3</DropdownItem>\n        </DropdownCategory>\n      </DropdownList>\n    </Dropdown>\n  </Div>\n)`,\n                        output: (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", margin: -10 },\n                            React.createElement(DropdownComponent, { triggerInteraction: TriggerInteraction.CLICK | TriggerInteraction.HOVER },\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Click + Hover\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, { isSoft: true },\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-1\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-2\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-1\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-2\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-3\")))),\n                            React.createElement(DropdownComponent, { triggerInteraction: TriggerInteraction.RIGHT_CLICK },\n                                React.createElement(Div, { alignItems: \"center\", display: \"flex\", margin: 10 },\n                                    \"Right Click\",\n                                    React.createElement(DropdownArrowIcon, { fill: \"$color.dynamic.bodyFont\", iconSize: \"$size.icon.medium\", marginLeft: 5 })),\n                                React.createElement(DropdownList, null,\n                                    React.createElement(DropdownCategory, { label: \"Category A\" },\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-1\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-2\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item A-3\")),\n                                    React.createElement(DropdownCategory, { label: \"Category B\" },\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-1\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-2\"),\n                                        React.createElement(DropdownItem, { isDisabled: true }, \"Item B-3\")))))),\n                        title: 'Trigger Interaction',\n                    } }),\n                React.createElement(\"h2\", { id: \"theme-attributes\" }, \"Theme Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'cursor.dropdown',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"cursor\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'fontFamily.dropdown',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"font-family\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'opacity.dropdownDisabled',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"opacity\"),\n                                \" value when \",\n                                React.createElement(\"code\", null, \"isDisabled\"),\n                                \" is \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'radius.dropdown',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"border-radius\"),\n                                \" value.\"),\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"size-attributes\" }, \"Size Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'dropdown.fontSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"font-size\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'dropdown.margin',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#coordinator\" }, \"Coordinator\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"margin\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'dropdown.padding',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#coordinator\" }, \"Coordinator\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"padding\"),\n                                \" value.\"),\n                        },\n                    ] })),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Fixed Box',\n                    to: '/ui-components/fixed-box',\n                }, prev: {\n                    label: 'Date Picker',\n                    to: '/ui-components/date-picker',\n                } })),\n        React.createElement(Nav, { list: [\n                { label: 'Dropdown', id: 'dropdown' },\n                { label: 'Dropdown List', id: 'dropdown-list' },\n                { label: 'Dropdown Item', id: 'dropdown-item' },\n                { label: 'Dropdown Category', id: 'dropdown-category' },\n                { label: 'Dropdown Arrow Icon', id: 'dropdown-arrow-icon' },\n                { label: 'Example', id: 'example' },\n                { label: 'Theme Attributes', id: 'theme-attributes' },\n                { label: 'Size Attributes', id: 'size-attributes' },\n            ] })));\n};\nexport default Dropdown;\n"],"names":[],"sourceRoot":""}