{"version":3,"file":"1f3ff4cca51c95a0618b.js","mappings":"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","sources":["webpack://smart-react-components-page/./src/containers/Tooltip.tsx"],"sourcesContent":["import Button from '@smart-react-components/ui/Button';\nimport ButtonList from '@smart-react-components/ui/Button/ButtonList';\nimport TooltipComponent, { Position } from '@smart-react-components/ui/Tooltip';\nimport React from 'react';\nimport AttributesTable from '../components/AttributesTable';\nimport ComponentType from '../components/ComponentType';\nimport LabelLink from '../components/LabelLink';\nimport MultiExample from '../components/MultiExample';\nimport Navbar from '../components/Nav';\nimport PropsTable from '../components/PropsTable';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Blockquote from '../elements/Blockquote';\nimport Content from '../elements/Content';\nimport Li from '../elements/Li';\nimport Page from '../elements/Page';\nimport Ul from '../elements/Ul';\nimport usePage from '../hooks/usePage';\nconst Tooltip = () => {\n    usePage({ title: 'Tooltip' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"tooltip\" }, \"Tooltip\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"Tooltip component takes two children elements; the first of which for the toggle element and the second for the content element.\"),\n                React.createElement(\"p\", null,\n                    \"The toggle element \",\n                    React.createElement(\"i\", null,\n                        \"(the first item of \",\n                        React.createElement(\"code\", null, \"children\"),\n                        \" prop)\"),\n                    \" should accept \",\n                    React.createElement(\"code\", null, \"ref\"),\n                    \" so it should be either Styled component, or React component with \",\n                    React.createElement(\"code\", null, \"forwardRef\"),\n                    \".\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: '[JSX.Element, JSX.Element]',\n                            isRequired: true,\n                            description: 'The first element for the toggle element, and the second element for the tooltip content.',\n                        },\n                        {\n                            name: 'status',\n                            type: 'boolean',\n                            description: 'Tooltip display status.',\n                        },\n                        {\n                            name: 'setStatus',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<boolean>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"status\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            defaultValue: '!dynamic',\n                            description: 'Palette item key.',\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Uses the soft colors in the palette.',\n                        },\n                        {\n                            name: 'size',\n                            type: React.createElement(LabelLink, { to: \"/api#size-prop\" }, \"SizeProp\"),\n                            defaultValue: 'medium',\n                            description: 'Tooltip size, has responsive support.',\n                        },\n                        {\n                            name: 'position',\n                            type: React.createElement(LabelLink, { to: \"/api#position\" }, \"Position\"),\n                            defaultValue: 'TOP',\n                            description: 'Position of the tooltip element by the toggle element. If the tooltip element gets overflown in the given position, it is rendered at another available position.',\n                        },\n                        {\n                            name: 'space',\n                            type: 'number',\n                            defaultValue: '0',\n                            description: 'Space between the toggle and the tooltip element.',\n                        },\n                        {\n                            name: 'triggerInteraction',\n                            type: React.createElement(LabelLink, { to: \"/api#trigger-interaction\" }, \"TriggerInteraction\"),\n                            defaultValue: 'CLICK',\n                            description: React.createElement(React.Fragment, null,\n                                \"Calls \",\n                                React.createElement(\"code\", null, \"setStatus\"),\n                                \" with \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \" param when the toggle element is interracted with the given interaction.\"),\n                        },\n                        {\n                            name: 'isDismissible',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                \"The \",\n                                React.createElement(\"code\", null, \"window\"),\n                                \" click calls \",\n                                React.createElement(\"code\", null, \"setStatus\"),\n                                \" with \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \" param.\"),\n                        },\n                        {\n                            name: 'transitionClassName',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Transition \",\n                                React.createElement(\"code\", null, \"className\"),\n                                \" prefix.\"),\n                        },\n                        {\n                            name: 'transitionDuration',\n                            type: 'number',\n                            description: 'Transition duration in milliseconds.',\n                        },\n                        {\n                            name: 'hasShowAnimation',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"When \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \", skips the show animation.\"),\n                        },\n                        {\n                            name: 'hasHideAnimation',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                \"When \",\n                                React.createElement(\"code\", null, \"false\"),\n                                \", skips the hide animation.\"),\n                        },\n                        {\n                            name: 'beforeShow',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-before-callback\" }, \"TransitionBeforeCallback\"),\n                            description: 'Called before the show transition is started; right after the component is mounted and element is rendered in the DOM.',\n                        },\n                        {\n                            name: 'beforeHide',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-before-callback\" }, \"TransitionBeforeCallback\"),\n                            description: 'Called before the hide transition is started.',\n                        },\n                        {\n                            name: 'afterShow',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-after-callback\" }, \"TransitionAfterCallback\"),\n                            description: 'Called after the show transition is completed.',\n                        },\n                        {\n                            name: 'afterHide',\n                            type: React.createElement(LabelLink, { to: \"/api#transition-after-callback\" }, \"TransitionAfterCallback\"),\n                            description: 'Called after the hide transition is completed; the component is unmounted and element is removed from the DOM.',\n                        },\n                        {\n                            name: 'hoverDelay',\n                            type: 'number',\n                            defaultValue: '0',\n                            description: 'Delay in milliseconds before the tooltip is shown when the mouse is hovered on the toggle element.',\n                        },\n                    ] }),\n                React.createElement(\"h3\", null, \"Trigger Interaction\"),\n                React.createElement(\"p\", null, \"You can set the trigger interaction for the Tooltip.\"),\n                React.createElement(Ul, null,\n                    React.createElement(Li, null,\n                        React.createElement(\"b\", null, \"CLICK:\"),\n                        \" is ocurred when the trigger element is clicked on.\"),\n                    React.createElement(Li, null,\n                        React.createElement(\"b\", null, \"HOVER:\"),\n                        \" is ocurred when the trigger element is hovered on.\"),\n                    React.createElement(Li, null,\n                        React.createElement(\"b\", null, \"RIGHT_CLICK:\"),\n                        \" is ocurred when the trigger element is right-clicked on.\"),\n                    React.createElement(Li, null,\n                        React.createElement(\"b\", null, \"NONE:\"),\n                        \" The trigger element is never triggered \",\n                        React.createElement(\"i\", null, \"(for custom usage purposes)\"),\n                        \".\")),\n                React.createElement(Blockquote, { marginTop: \"$length.3\" },\n                    \"You can set to \",\n                    React.createElement(\"code\", null, \"CLICK | HOVER\"),\n                    \" to trigger on both click and hover.\"),\n                React.createElement(\"h3\", null, \"Set Position\"),\n                React.createElement(\"p\", null,\n                    \"Tooltip provides an event for you to set position custom in case you have modified the box element afterwards. When you trigger \",\n                    React.createElement(\"code\", null, \"src.tooltip.setPosition\"),\n                    \" event for the toggle element, it sets position in the component.\"),\n                React.createElement(\"h2\", { id: \"example\" }, \"Example\"),\n                React.createElement(MultiExample, { first: {\n                        code: `import Button from '@smart-react-components/ui/Button'\nimport ButtonList from '@smart-react-components/ui/Button/ButtonList'\nimport Tooltip from '@smart-react-components/ui/Tooltip'\nimport React from 'react'\n\nexport default () => (\n  <ButtonList>\n    <Tooltip>\n      <Button palette=\"!dynamic\" marginLeft=\"$length.3\" marginTop=\"$length.3\">!Dynamic</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette=\"dynamic\">\n      <Button palette=\"dynamic\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Dynamic</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette=\"primary\">\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Primary</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette=\"secondary\">\n      <Button palette=\"secondary\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Secondary</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette=\"success\">\n      <Button palette=\"success\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Success</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette=\"danger\">\n      <Button palette=\"danger\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Danger</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette=\"warning\">\n      <Button palette=\"warning\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Warning</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip palette=\"info\">\n      <Button palette=\"info\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Info</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n  </ButtonList>\n)`,\n                        output: (React.createElement(ButtonList, null,\n                            React.createElement(TooltipComponent, null,\n                                React.createElement(Button, { palette: \"!dynamic\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"!Dynamic\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { palette: \"dynamic\" },\n                                React.createElement(Button, { palette: \"dynamic\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Dynamic\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { palette: \"primary\" },\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Primary\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { palette: \"secondary\" },\n                                React.createElement(Button, { palette: \"secondary\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Secondary\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { palette: \"success\" },\n                                React.createElement(Button, { palette: \"success\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Success\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { palette: \"danger\" },\n                                React.createElement(Button, { palette: \"danger\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Danger\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { palette: \"warning\" },\n                                React.createElement(Button, { palette: \"warning\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Warning\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { palette: \"info\" },\n                                React.createElement(Button, { palette: \"info\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Info\"),\n                                React.createElement(\"span\", null, \"Tooltip\")))),\n                        title: 'Palette',\n                    }, second: {\n                        code: `import Button from '@smart-react-components/ui/Button'\nimport ButtonList from '@smart-react-components/ui/Button/ButtonList'\nimport Tooltip from '@smart-react-components/ui/Tooltip'\nimport React from 'react'\n\nexport default () => (\n  <ButtonList>\n    <Tooltip isSoft>\n      <Button isSoft palette=\"!dynamic\" marginLeft=\"$length.3\" marginTop=\"$length.3\">!Dynamic</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette=\"dynamic\">\n      <Button isSoft palette=\"dynamic\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Dynamic</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette=\"primary\">\n      <Button isSoft marginLeft=\"$length.3\" marginTop=\"$length.3\">Primary</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette=\"secondary\">\n      <Button isSoft palette=\"secondary\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Secondary</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette=\"success\">\n      <Button isSoft palette=\"success\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Success</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette=\"danger\">\n      <Button isSoft palette=\"danger\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Danger</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette=\"warning\">\n      <Button isSoft palette=\"warning\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Warning</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip isSoft palette=\"info\">\n      <Button isSoft palette=\"info\" marginLeft=\"$length.3\" marginTop=\"$length.3\">Info</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n  </ButtonList>\n)`,\n                        output: (React.createElement(ButtonList, null,\n                            React.createElement(TooltipComponent, { isSoft: true },\n                                React.createElement(Button, { isSoft: true, palette: \"!dynamic\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"!Dynamic\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { isSoft: true, palette: \"dynamic\" },\n                                React.createElement(Button, { isSoft: true, palette: \"dynamic\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Dynamic\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { isSoft: true, palette: \"primary\" },\n                                React.createElement(Button, { isSoft: true, marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Primary\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { isSoft: true, palette: \"secondary\" },\n                                React.createElement(Button, { isSoft: true, palette: \"secondary\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Secondary\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { isSoft: true, palette: \"success\" },\n                                React.createElement(Button, { isSoft: true, palette: \"success\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Success\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { isSoft: true, palette: \"danger\" },\n                                React.createElement(Button, { isSoft: true, palette: \"danger\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Danger\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { isSoft: true, palette: \"warning\" },\n                                React.createElement(Button, { isSoft: true, palette: \"warning\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Warning\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { isSoft: true, palette: \"info\" },\n                                React.createElement(Button, { isSoft: true, palette: \"info\", marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Info\"),\n                                React.createElement(\"span\", null, \"Tooltip\")))),\n                        title: 'Soft',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Button from '@smart-react-components/ui/Button'\nimport ButtonList from '@smart-react-components/ui/Button/ButtonList'\nimport Tooltip from '@smart-react-components/ui/Tooltip'\nimport React from 'react'\n\nexport default () => (\n  <ButtonList>\n    <Tooltip size=\"small\">\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Small</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip>\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Medium</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip size=\"large\">\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Large</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip size=\"small\" sizeMd=\"medium\" sizeLg=\"large\">\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Responsive</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n  </ButtonList>\n)`,\n                        output: (React.createElement(ButtonList, null,\n                            React.createElement(TooltipComponent, { size: \"small\" },\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Small\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, null,\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Medium\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { size: \"large\" },\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Large\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { size: \"small\", sizeMd: \"medium\", sizeLg: \"large\" },\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Responsive\"),\n                                React.createElement(\"span\", null, \"Tooltip\")))),\n                        title: 'Size',\n                    }, second: {\n                        code: `import Button from '@smart-react-components/ui/Button'\nimport ButtonList from '@smart-react-components/ui/Button/ButtonList'\nimport Tooltip, { Position } from '@smart-react-components/ui/Tooltip'\nimport React from 'react'\n\nexport default () => (\n  <ButtonList>\n    <Tooltip>\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Top</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip position={Position.BOTTOM}>\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Bottom</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip position={Position.LEFT}>\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Left</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n    <Tooltip position={Position.RIGHT}>\n      <Button marginLeft=\"$length.3\" marginTop=\"$length.3\">Right</Button>\n      <span>Tooltip</span>\n    </Tooltip>\n  </ButtonList>\n)`,\n                        output: (React.createElement(ButtonList, null,\n                            React.createElement(TooltipComponent, null,\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Top\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { position: Position.BOTTOM },\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Bottom\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { position: Position.LEFT },\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Left\"),\n                                React.createElement(\"span\", null, \"Tooltip\")),\n                            React.createElement(TooltipComponent, { position: Position.RIGHT },\n                                React.createElement(Button, { marginLeft: \"$length.3\", marginTop: \"$length.3\" }, \"Right\"),\n                                React.createElement(\"span\", null, \"Tooltip\")))),\n                        title: 'Position',\n                    } }),\n                React.createElement(\"h2\", { id: \"theme-attributes\" }, \"Theme Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'fontFamily.tooltip',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"font-family\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'radius.tooltip',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"border-radius\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'transition.tooltipDuration',\n                            type: 'number',\n                            description: 'Duration in milliseconds.',\n                        },\n                        {\n                            name: 'zIndex.tooltip',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"z-index\"),\n                                \" value.\"),\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"size-attributes\" }, \"Size Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'tooltip.fontSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"font-size\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'tooltip.padding',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#coordinator\" }, \"Coordinator\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"padding\"),\n                                \" value.\"),\n                        },\n                    ] })),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Wave Effect',\n                    to: '/ui-components/wave-effect',\n                }, prev: {\n                    label: 'Textarea',\n                    to: '/ui-components/textarea',\n                } })),\n        React.createElement(Navbar, { list: [\n                { label: 'Tooltip', id: 'tooltip' },\n                { label: 'Example', id: 'example' },\n                { label: 'Theme Attributes', id: 'theme-attributes' },\n                { label: 'Size Attributes', id: 'size-attributes' },\n            ] })));\n};\nexport default Tooltip;\n"],"names":[],"sourceRoot":""}