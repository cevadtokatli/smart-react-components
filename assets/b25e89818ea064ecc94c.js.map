{"version":3,"file":"b25e89818ea064ecc94c.js","mappings":"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","sources":["webpack://smart-react-components-page/./src/containers/Router.tsx"],"sourcesContent":["import React from 'react';\nimport Nav from '../components/Nav';\nimport ComponentType from '../components/ComponentType';\nimport LabelLink from '../components/LabelLink';\nimport PropsTable from '../components/PropsTable';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Blockquote from '../elements/Blockquote';\nimport Content from '../elements/Content';\nimport Page from '../elements/Page';\nimport usePage from '../hooks/usePage';\nimport Ul from '../elements/Ul';\nconst Router = () => {\n    usePage({ title: 'Router' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"router\" }, \"Router\"),\n                React.createElement(\"p\", null, \"SRC router works the same way as the React router does. The only difference between them is that SRC router provides a callback method so you can fetch data before the URL change is applied and renders a progress bar while fetching the data.\"),\n                React.createElement(\"p\", null,\n                    \"SRC router uses \",\n                    React.createElement(\"code\", null, \"react-router\"),\n                    \" as a peer dependency. You need to have it in your \",\n                    React.createElement(\"code\", null, \"package.json\"),\n                    \" in order to use the SRC router.\"),\n                React.createElement(\"h2\", { id: \"client-router\" }, \"Client Router\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"Client Router uses the HTML5 History API to change URL. It should be inserted at the top of other route components.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(LabelLink, { to: \"/api#jsx-children\" }, \"JSXChildren\"),\n                            isRequired: true,\n                            description: 'Child elements.',\n                        },\n                        {\n                            name: 'routes',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#route-module\" }, \"RouteModule\"),\n                                \"[]\"),\n                            isRequired: true,\n                            description: 'Route modules to load lazily.',\n                        },\n                        {\n                            name: 'params',\n                            type: 'any',\n                            description: 'Params to give to the get method.',\n                        },\n                        {\n                            name: 'fallback',\n                            type: 'JSX.Element',\n                            description: React.createElement(React.Fragment, null,\n                                \"Rendered when no children are matched in \",\n                                React.createElement(LabelLink, { to: \"/api#routes\" }, \"Routes\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'progressBar',\n                            type: 'JSX.Element',\n                            description: 'Progress bar to display progress waiting for the get method to be resolved.',\n                        },\n                    ] }),\n                React.createElement(\"h2\", null, \"Server Router\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Server Router works only on the server side. It is used to provide server side rendering. Just like \",\n                    React.createElement(LabelLink, { to: \"/api#client-router\" }, \"Client Router\"),\n                    \", it also should be inserted at the top of other route components.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(LabelLink, { to: \"/api#jsx-children\" }, \"JSXChildren\"),\n                            isRequired: true,\n                            description: 'Child elements.',\n                        },\n                        {\n                            name: 'modules',\n                            type: 'object',\n                            isRequired: true,\n                            description: 'Route modules loaded lazily.',\n                        },\n                        {\n                            name: 'routes',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#route-module\" }, \"RouteModule\"),\n                                \"[]\"),\n                            isRequired: true,\n                            description: 'Route modules to load lazily.',\n                        },\n                        {\n                            name: 'url',\n                            type: 'string',\n                            isRequired: true,\n                            description: 'Initial URL value.',\n                        },\n                        {\n                            name: 'fallback',\n                            type: 'JSX.Element',\n                            description: React.createElement(React.Fragment, null,\n                                \"Rendered when no children are matched in \",\n                                React.createElement(LabelLink, { to: \"/api#routes\" }, \"Routes\"),\n                                \".\"),\n                        },\n                    ] }),\n                React.createElement(\"h2\", null, \"Routes\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"Routes renders the corresponding route module children.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(React.Fragment, null,\n                                \"(\",\n                                `{`,\n                                \" children: JSX.Element, match: \",\n                                React.createElement(LabelLink, { to: \"/api#match\" }, \"Match\"),\n                                \", url: \",\n                                React.createElement(LabelLink, { to: \"/api#url\" }, \"URL\"),\n                                \" \",\n                                `}`,\n                                \") => JSX.Element\"),\n                            description: 'It is called with the match and URL parameters to render the children custom.',\n                        },\n                    ] }),\n                React.createElement(\"h2\", null, \"Route\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"Route renders the children if the path matches the URL.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(React.Fragment, null,\n                                \"JSX.Element | (\",\n                                `{`,\n                                \" match: \",\n                                React.createElement(LabelLink, { to: \"/api#match\" }, \"Match\"),\n                                \", url: \",\n                                React.createElement(LabelLink, { to: \"/api#url\" }, \"URL\"),\n                                \" \",\n                                `}`,\n                                \") => JSX.Element\"),\n                            isRequired: true,\n                            description: 'Child elements to be rendered when the path is matched. If given as the function, the component always renders the returned result.',\n                        },\n                        {\n                            name: 'path',\n                            type: React.createElement(LabelLink, { to: \"/api#path\" }, \"Path\"),\n                            isRequired: true,\n                            description: 'When it matches the URL, Route renders the children.',\n                        },\n                        {\n                            name: 'isExact',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Route renders the children only when the path matches the URL exactly.',\n                        },\n                    ] }),\n                React.createElement(\"h2\", null, \"Link\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Renders an \",\n                    React.createElement(\"code\", null, \"a\"),\n                    \" element. When the element is clicked on, it changes the URL, but doesn't reload the page.\"),\n                React.createElement(\"p\", null,\n                    \"It provides two different props to its child component; \",\n                    React.createElement(\"code\", null, \"isActive\"),\n                    \" and \",\n                    React.createElement(\"code\", null, \"isActivating\"),\n                    \". If the current path matches the URL, sets \",\n                    React.createElement(\"code\", null, \"isActive\"),\n                    \" to \",\n                    React.createElement(\"code\", null, \"true\"),\n                    \". When it is clicked on and while waiting for the get method to be resolved. sets \",\n                    React.createElement(\"code\", null, \"isActivating\"),\n                    \" to \",\n                    React.createElement(\"code\", null, \"true\"),\n                    \". It also assigns these props as CSS classes to its \",\n                    React.createElement(\"code\", null, \"a\"),\n                    \" element.\"),\n                React.createElement(\"h3\", null, \"Props \"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                                \" | (\",\n                                `{`,\n                                \" isActive: boolean, isActivating: boolean \",\n                                `}`,\n                                \") => \",\n                                React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\")),\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"a\"),\n                                \" element content.\"),\n                        },\n                        {\n                            name: 'to',\n                            type: 'string',\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"a href\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'path',\n                            type: React.createElement(LabelLink, { to: \"/api#path\" }, \"Path\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"If it matches the URL, \",\n                                React.createElement(\"code\", null, \"isActive\"),\n                                \" and \",\n                                React.createElement(\"code\", null, \"isActivating\"),\n                                \" props are set to \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \" accordingly. If \",\n                                React.createElement(\"code\", null, \"null\"),\n                                \", it takes \",\n                                React.createElement(\"code\", null, \"to\"),\n                                \" prop value.\"),\n                        },\n                        {\n                            name: 'isExact',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"isActive\"),\n                                \" and \",\n                                React.createElement(\"code\", null, \"isActivating\"),\n                                \" props are set to \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \" when the path matches the URL exactly.\"),\n                        },\n                        {\n                            name: 'isDisabled',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                \"Doesn't bind any of the events and sets \",\n                                React.createElement(\"code\", null, \"pointerEvents\"),\n                                \" as \",\n                                React.createElement(\"code\", null, \"none\"),\n                                \" to \",\n                                React.createElement(\"code\", null, \"a\"),\n                                \" element.\"),\n                        },\n                        {\n                            name: 'as',\n                            type: 'StyledComponent',\n                            description: React.createElement(React.Fragment, null,\n                                \"Styled component \",\n                                React.createElement(\"code\", null, \"as\"),\n                                \" attribute. It is used to replace \",\n                                React.createElement(\"code\", null, \"a\"),\n                                \" element with your own styled component to style the element.\"),\n                        },\n                        {\n                            name: 'elementProps',\n                            type: React.createElement(LabelLink, { to: \"/api#jsx-element-props\" }, \"JSXElementProps\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"a\"),\n                                \" \",\n                                React.createElement(LabelLink, { to: \"/styled-props\" }, \"Styled Props\"),\n                                \" and HTML attributes.\"),\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Link provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#click-events\" }, \"Click Events\"),\n                    \" and \",\n                    React.createElement(LabelLink, { to: \"/element-props#intrinsic-styled-core-props\" }, \"Intrinsic Styled Core Props\"),\n                    \" for \",\n                    React.createElement(\"code\", null, \"a\"),\n                    \" element.\"),\n                React.createElement(\"p\", null,\n                    \"The navigation is based on \",\n                    React.createElement(\"code\", null, \"onClick\"),\n                    \". If its event is prevented, the navigation operation gets aborted.\"),\n                React.createElement(\"h2\", { id: \"push\" }, \"Push\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"It updates the URL as \",\n                    React.createElement(\"code\", null, \"to\"),\n                    \".\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'to',\n                            type: 'string',\n                            isRequired: true,\n                            description: 'URL to which to push.',\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"redirect\" }, \"Redirect\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"It redirects the page to \",\n                    React.createElement(\"code\", null, \"to\"),\n                    \".\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'to',\n                            type: 'string',\n                            isRequired: true,\n                            description: 'URL to which to redirect.',\n                        },\n                        {\n                            name: 'isNewTab',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Opens the URL in a new tab.',\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"replace\" }, \"Replace\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"It replaces the URL with \",\n                    React.createElement(\"code\", null, \"to\"),\n                    \".\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'to',\n                            type: 'string',\n                            isRequired: true,\n                            description: 'URL to which to replace.',\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"use-router\" }, \"Use Router\"),\n                React.createElement(\"p\", null,\n                    \"All of the router props are automatically given to \",\n                    React.createElement(LabelLink, { to: \"/api#routes\" }, \"Routes\"),\n                    \" and \",\n                    React.createElement(LabelLink, { to: \"/api#route\" }, \"Route\"),\n                    \" components. However, if you need to access the router props in children components, the SRC router provides a hook for you to access them without having to pass through from parent components.\"),\n                React.createElement(\"h2\", { id: \"router-methods\" }, \"Router Methods\"),\n                React.createElement(\"p\", null,\n                    \"The SRC router modifies HTML5 History API. You can use them directly from the router context using \",\n                    React.createElement(LabelLink, { to: \"/api#use-router\" }, \"Use Router\"),\n                    \".\"),\n                React.createElement(Ul, null,\n                    React.createElement(\"li\", null,\n                        React.createElement(\"code\", null, \"push(to: string) => void\"),\n                        \": Updates the current URL as the given \",\n                        React.createElement(\"code\", null, \"to\"),\n                        \" param.\"),\n                    React.createElement(\"li\", null,\n                        React.createElement(\"code\", null, \"replace(to: string) => void\"),\n                        \": Replaces the current URL with the given \",\n                        React.createElement(\"code\", null, \"to\"),\n                        \" param.\"),\n                    React.createElement(\"li\", null,\n                        React.createElement(\"code\", null, \"redirect(to: string, isNewPage?: boolean) => void\"),\n                        \": Redirects the page to the \",\n                        React.createElement(\"code\", null, \"to\"),\n                        \" URL. The second param \",\n                        React.createElement(\"code\", null, \"isNewPage\"),\n                        \" is optional and indicates if the page should be opened in a new tab.\")),\n                React.createElement(Blockquote, null, \"Router methods are not available on the server environment.\"),\n                React.createElement(\"h2\", { id: \"flow\" }, \"Flow\"),\n                React.createElement(\"p\", null,\n                    \"The SRC router is based on two props that are stored in the internal React reducer in \",\n                    React.createElement(LabelLink, { to: \"/router#client-router\" }, \"Client Router\"),\n                    \". These props: \",\n                    React.createElement(\"code\", null, \"activeURL\"),\n                    \" and \",\n                    React.createElement(\"code\", null, \"activatingURL\"),\n                    \" represent the current URL and the navigating URL respectively.\"),\n                React.createElement(\"p\", null,\n                    \"The current URL \",\n                    React.createElement(\"code\", null, \"activeURL\"),\n                    \" is the URL by which \",\n                    React.createElement(LabelLink, { to: \"/router#routes\" }, \"Routes\"),\n                    \" renders its children. When the URL is updated by \",\n                    React.createElement(LabelLink, { to: \"/router#link\" }, \"Link\"),\n                    \", \",\n                    React.createElement(LabelLink, { to: \"/router#push\" }, \"Push\"),\n                    \", or \",\n                    React.createElement(LabelLink, { to: \"/router#replace\" }, \"Replace\"),\n                    \" components; \",\n                    React.createElement(\"code\", null, \"push\"),\n                    \" or \",\n                    React.createElement(\"code\", null, \"replace\"),\n                    \" methods, \",\n                    React.createElement(LabelLink, { to: \"/router#client-router\" }, \"Client Router\"),\n                    \" checks if there are any get methods present and if not, directly updates \",\n                    React.createElement(\"code\", null, \"activeURL\"),\n                    \" rendering the new matched components. If a get method is present, \",\n                    React.createElement(LabelLink, { to: \"/router#client-router\" }, \"Client Router\"),\n                    \" sets \",\n                    React.createElement(\"code\", null, \"activatingURL\"),\n                    \" to the navigated URL and calls the get method. \",\n                    React.createElement(LabelLink, { to: \"/router#routes\" }, \"Routes\"),\n                    \" component doesn't render the new matched component until the get method is resolved and when it's resolved, \",\n                    React.createElement(LabelLink, { to: \"/router#client-router\" }, \"Client Router\"),\n                    \" clears \",\n                    React.createElement(\"code\", null, \"activatingURL\"),\n                    \" and sets \",\n                    React.createElement(\"code\", null, \"activeURL\"),\n                    \" to the current URL.\"),\n                React.createElement(\"p\", null, \"Main purpose of the get method is to keep the page intact while rendering a progress bar that represents an indicator for the new page load status until the new page is fully ready to be rendered. It generally is used to send an API request to fetch data for the new page and load the new page module lazy.\"),\n                React.createElement(\"h2\", { id: \"route-modules\" }, \"Route Modules\"),\n                React.createElement(\"p\", null,\n                    React.createElement(\"code\", null, \"routes\"),\n                    \" prop is an array of \",\n                    React.createElement(LabelLink, { to: \"/api#route-module\" }, \"Route Module\"),\n                    \" objects. Each route module object consists of five items: \",\n                    React.createElement(\"code\", null, \"path\"),\n                    \" is a string and when it matches the URL, the router starts loading the module in order to render the component. \",\n                    React.createElement(\"code\", null, \"module\"),\n                    \" is a function that returns an \",\n                    React.createElement(\"code\", null, \"import\"),\n                    \" object. The module default export should be component to be rendered when \",\n                    React.createElement(\"code\", null, \"path\"),\n                    \" matches the URL. The module can also export a \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method which is called before the component is rendered. The \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method should return a \",\n                    React.createElement(\"code\", null, \"Promise\"),\n                    \" for which the SRC router waits to render the component.\"),\n                React.createElement(\"p\", null,\n                    React.createElement(\"code\", null, \"searchKeys\"),\n                    \" is optional with an array of search keys in the URL. When one of the given keys are changed, it recalls the \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method just as it does when the URL param is changed. The SRC Router allows you to set default values for the given search keys using \",\n                    React.createElement(\"code\", null, \"defaultSearchValues\"),\n                    \" item in the object.\"),\n                React.createElement(\"p\", null,\n                    \"The last item \",\n                    React.createElement(\"code\", null, \"children\"),\n                    \" is optional submodules which is an array of \",\n                    React.createElement(LabelLink, { to: \"/api#route-module\" }, \"Route Modules\"),\n                    \". When you start using \",\n                    React.createElement(LabelLink, { to: \"/api#routes\" }, \"Routes\"),\n                    \" component, the first one represents \",\n                    React.createElement(\"code\", null, \"routes\"),\n                    \" prop you give to \",\n                    React.createElement(LabelLink, { to: \"/api#client-router\" }, \"Client Router\"),\n                    \"/\",\n                    React.createElement(LabelLink, { to: \"/api#server-router\" }, \"Server Router\"),\n                    \". Each \",\n                    React.createElement(LabelLink, { to: \"/api#routers\" }, \"Routers\"),\n                    \" component passes a prop down to its next \",\n                    React.createElement(LabelLink, { to: \"/api#routes\" }, \"Routes\"),\n                    \" child component for the child to render \",\n                    React.createElement(\"code\", null, \"children\"),\n                    \" items in the object.\"),\n                React.createElement(\"h2\", { id: \"routes-route\" },\n                    React.createElement(LabelLink, { to: \"/api#routes\" }, \"Routes\"),\n                    \" vs \",\n                    React.createElement(LabelLink, { to: \"/api#route\" }, \"Route\")),\n                React.createElement(\"p\", null,\n                    React.createElement(LabelLink, { to: \"/api#routes\" }, \"Routes\"),\n                    \" doesn't accept any props. It renders the corresponding route module in tree structure given to \",\n                    React.createElement(LabelLink, { to: \"/router#client-router\" }, \"Client Router\"),\n                    \"/\",\n                    React.createElement(LabelLink, { to: \"/router#server-router\" }, \"Server Router\"),\n                    \". When the URL is changed, it doesn't directly render the new matched component. It first loads the module dynamically, calls the \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method of the module if any; when the \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method, which returns a \",\n                    React.createElement(\"code\", null, \"Promise\"),\n                    \", is resolved, it renders the module component.\"),\n                React.createElement(\"p\", null,\n                    \"On the other hand, \",\n                    React.createElement(LabelLink, { to: \"/api#route\" }, \"Route\"),\n                    \" doesn't accept modules but directly a component and renders the component if the path is matched. It works the same way as \",\n                    React.createElement(\"code\", null, \"Route\"),\n                    \" component from \",\n                    React.createElement(\"code\", null, \"react-router-dom\"),\n                    \" does.\"),\n                React.createElement(\"p\", null,\n                    React.createElement(LabelLink, { to: \"/api#routes\" }, \"Routes\"),\n                    \" is useful for generic router structure where you have different modules for different pages, load them lazy, and send an API request to fetch data and render progress bar indicator meanwhile. \",\n                    React.createElement(LabelLink, { to: \"/api#route\" }, \"Route\"),\n                    \" is useful when you don't need to invoke \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method beforehand and load modules lazy.\"),\n                React.createElement(\"h2\", { id: \"progress-bar\" }, \"Progress Bar\"),\n                React.createElement(\"p\", null,\n                    React.createElement(LabelLink, { to: \"/api#client-router\" }, \"Client Router\"),\n                    \" renders \",\n                    React.createElement(\"code\", null, \"progressBar\"),\n                    \" prop when navigated to a new URL which represents a \",\n                    React.createElement(\"code\", null, \"module\"),\n                    \" \",\n                    React.createElement(\"i\", null,\n                        \"(an item in \",\n                        React.createElement(\"code\", null, \"routes\"),\n                        \" prop)\"),\n                    \". \",\n                    React.createElement(\"code\", null, \"progressBar\"),\n                    \" accepts a \",\n                    React.createElement(\"code\", null, \"number\"),\n                    \" prop that indicates the percentage value.\"),\n                React.createElement(\"p\", null,\n                    \"The percentage value can be updated by \",\n                    React.createElement(\"code\", null, \"setPercantage\"),\n                    \" param given to the \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method.\"),\n                React.createElement(\"h2\", { id: \"get-method-additional-params\" }, \"Get Method Additional Params\"),\n                React.createElement(\"p\", null,\n                    \"When you fetch data from the API, you will want to store it in the redux or some similar state management structure; however, you cannot access the redux directly since the \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method is not out of the react's lifecycle. \",\n                    React.createElement(LabelLink, { to: \"/router#client-router\" }, \"Client Router\"),\n                    \" provides \",\n                    React.createElement(\"code\", null, \"params\"),\n                    \" prop to send additional params to the \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method. You can send the redux store or any additional global props to the \",\n                    React.createElement(LabelLink, { to: \"/api#get\" }, \"get\"),\n                    \" method via \",\n                    React.createElement(\"code\", null, \"params\"),\n                    \" prop.\"),\n                React.createElement(\"h2\", { id: \"example\" }, \"Example\"),\n                React.createElement(\"p\", null,\n                    React.createElement(LabelLink, { to: \"https://github.com/cevadtokatli/smart-react-components/tree/router-example\" }, \"Click\"),\n                    \" for the real world example how the SRC router is used on both the client and the server side.\")),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Server Side Rendering',\n                    to: '/server-side-rendering',\n                }, prev: {\n                    label: 'Transition',\n                    to: '/transition',\n                } })),\n        React.createElement(Nav, { list: [\n                { label: 'Router', id: 'router' },\n                { label: 'Client Router', id: 'client-router' },\n                { label: 'Server Router', id: 'server-router' },\n                { label: 'Routes', id: 'routes' },\n                { label: 'Route', id: 'route' },\n                { label: 'Link', id: 'link' },\n                { label: 'Push', id: 'push' },\n                { label: 'Redirect', id: 'redirect' },\n                { label: 'Replace', id: 'replace' },\n                { label: 'Use Router', id: 'use-router' },\n                { label: 'Router Methods', id: 'router-methods' },\n                { label: 'Flow', id: 'flow' },\n                { label: 'Route Modules', id: 'route-modules' },\n                { label: 'Routes vs Route', id: 'routes-route' },\n                { label: 'Progress Bar', id: 'progress-bar' },\n                { label: 'Get Method Additional Params', id: 'get-method-additional-params' },\n            ] })));\n};\nexport default Router;\n"],"names":[],"sourceRoot":""}