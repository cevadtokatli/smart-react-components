{"version":3,"file":"537f894ebf34c4ff22fd.js","mappings":"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B;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,kCAAkC,0DAAmB,CAAC,6DAAS,IAAI,sBAAsB;AACzF;AACA;AACA,yBAAyB;AACzB;AACA;AACA,kCAAkC,0DAAmB,CAAC,6DAAS,IAAI,gCAAgC;AACnG;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,kCAAkC,0DAAmB,CAAC,uDAAc;AACpE,gCAAgC,0DAAmB,CAAC,6DAAS,IAAI,sBAAsB;AACvF;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E;AACA,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,uBAAuB;AACvB,gBAAgB,0DAAmB,CAAC,6DAAU;AAC9C;AACA,oBAAoB,0DAAmB,CAAC,6DAAS,IAAI,kDAAkD;AACvG;AACA,gBAAgB,0DAAmB,CAAC,gEAAY,IAAI;AACpD;AACA;;AAEA;AACA;;AAEA,6BAA6B,OAAO,UAAU,UAAU;AACxD,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,KAAK,WAAW,IAAI;AAChG;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,uBAAuB;AACvB,gBAAgB,0DAAmB,CAAC,gEAAY,IAAI;AACpD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8EAA8E,KAAK,WAAW,IAAI;AAClG;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB;AACpB,sBAAsB;AACtB,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB;AACpB,sBAAsB;AACtB,qBAAqB;AACrB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB;AACpB,sBAAsB;AACtB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,oBAAoB;AACpB,sBAAsB;AACtB,qBAAqB;AACrB;AACA;AACA;AACA,GAAG;AACH,gCAAgC,0DAAmB;AACnD;AACA,qBAAqB;AACrB;AACA,sBAAsB,oBAAoB;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,KAAK,WAAW,IAAI;AAChG;AACA,gBAAgB;AAChB;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA,gBAAgB;AAChB;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,uBAAuB;AACvB,gBAAgB,0DAAmB,CAAC,gEAAY,IAAI;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,KAAK,WAAW,IAAI;AAChG;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA,0BAA0B;AAC1B;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,KAAK,WAAW,IAAI;AAChG;AACA;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA,oBAAoB;AACpB;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,uBAAuB;AACvB,gBAAgB,0DAAmB,CAAC,gEAAY,IAAI;AACpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,KAAK,WAAW,IAAI;AAChG;AACA;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA,oBAAoB;AACpB;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4EAA4E,KAAK,WAAW,IAAI;AAChG;AACA,uBAAuB;AACvB,0BAA0B;AAC1B;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA,oBAAoB;AACpB;AACA,eAAe;AACf,kBAAkB;AAClB,oBAAoB;AACpB,mBAAmB;AACnB;AACA;AACA;AACA,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,uBAAuB;AACvB,gBAAgB,0DAAmB,CAAC,gEAAY,IAAI;AACpD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb,gBAAgB;AAChB,cAAc;AACd,cAAc;AACd,gBAAgB;AAChB;AACA;AACA,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E,KAAK,WAAW,IAAI;AAChG;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,eAAe;AACf,kBAAkB;AAClB;AACA;AACA,oBAAoB;AACpB,mBAAmB;AACnB;AACA,eAAe;AACf,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,gCAAgC,0DAAmB;AACnD;AACA,uBAAuB;AACvB,gBAAgB,0DAAmB,SAAS,wBAAwB;AACpE,gBAAgB,0DAAmB,CAAC,mEAAe,IAAI;AACvD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E;AACA,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB,uBAAuB;AACvB,gBAAgB,0DAAmB,SAAS,uBAAuB;AACnE,gBAAgB,0DAAmB,CAAC,mEAAe,IAAI;AACvD;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E;AACA,gCAAgC,0DAAmB;AACnD;AACA,gCAAgC,0DAAmB;AACnD;AACA,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E;AACA,gCAAgC,0DAAmB;AACnD;AACA,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E;AACA,gCAAgC,0DAAmB;AACnD;AACA,gCAAgC,0DAAmB;AACnD;AACA,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E;AACA,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E;AACA,gCAAgC,0DAAmB;AACnD;AACA,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAmB,CAAC,uDAAc;AAC3E;AACA,gCAAgC,0DAAmB;AACnD;AACA,yBAAyB;AACzB,uBAAuB;AACvB,YAAY,0DAAmB,CAAC,kEAAc,IAAI;AAClD;AACA;AACA,iBAAiB;AACjB;AACA;AACA,mBAAmB;AACnB,QAAQ,0DAAmB,CAAC,uDAAM,IAAI;AACtC,kBAAkB,2CAA2C;AAC7D,kBAAkB,mDAAmD;AACrE,kBAAkB,iDAAiD;AACnE,eAAe;AACf;AACA,iEAAe,WAAW,EAAC","sources":["webpack://smart-react-components-page/./src/containers/ColorPicker.tsx"],"sourcesContent":["import Div from '@smart-react-components/core/Element/Div';\nimport ColorPickerComponent, { ColorPickerFormat } from '@smart-react-components/ui/ColorPicker';\nimport React from 'react';\nimport AttributesTable from '../components/AttributesTable';\nimport ComponentType from '../components/ComponentType';\nimport LabelLink from '../components/LabelLink';\nimport MultiExample from '../components/MultiExample';\nimport Navbar from '../components/Nav';\nimport PropsTable from '../components/PropsTable';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Blockquote from '../elements/Blockquote';\nimport Content from '../elements/Content';\nimport Page from '../elements/Page';\nimport usePage from '../hooks/usePage';\nconst ColorPickerValueExample = () => {\n    const [value, setValue] = React.useState('#0F9AEF');\n    return React.createElement(ColorPickerComponent, { value: value, setValue: setValue });\n};\nconst ColorPickerPaletteExample = () => {\n    const [primaryValue, setPrimaryValue] = React.useState('#0665D0');\n    const [dangerValue, setDangerValue] = React.useState('#EF3752');\n    return (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", marginLeft: -10, marginTop: -10 },\n        React.createElement(ColorPickerComponent, { value: primaryValue, setValue: setPrimaryValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { palette: \"danger\", value: dangerValue, setValue: setDangerValue, marginLeft: 10, marginTop: 10 })));\n};\nconst ColorPickerSizeExample = () => {\n    const [smallValue, setSmallValue] = React.useState('#6C757D');\n    const [mediumValue, setMediumValue] = React.useState('#19B394');\n    const [largeValue, setLargeValue] = React.useState('#F7B84B');\n    const [responsiveValue, setResponsiveValue] = React.useState('#4FC6E1');\n    return (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", marginLeft: -10, marginTop: -10 },\n        React.createElement(ColorPickerComponent, { size: \"small\", palette: \"secondary\", value: smallValue, setValue: setSmallValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { palette: \"success\", value: mediumValue, setValue: setMediumValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { size: \"large\", palette: \"warning\", value: largeValue, setValue: setLargeValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { size: \"small\", sizeMd: \"medium\", sizeLg: \"large\", palette: \"info\", value: responsiveValue, setValue: setResponsiveValue, marginLeft: 10, marginTop: 10 })));\n};\nconst ColorPickerFormatExample = () => {\n    const [rgbValue, setRGBValue] = React.useState('#F9FBFC');\n    const [hslValue, setHSLValue] = React.useState('#323A46');\n    return (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", marginLeft: -10, marginTop: -10 },\n        React.createElement(ColorPickerComponent, { format: ColorPickerFormat.RGB, palette: \"light\", value: rgbValue, setValue: setRGBValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { format: ColorPickerFormat.HSL, palette: \"dark\", value: hslValue, setValue: setHSLValue, marginLeft: 10, marginTop: 10 })));\n};\nconst ColorPickerOpacityPickerExample = () => {\n    const [primaryValue, setPrimaryValue] = React.useState('#0665D0');\n    const [successValue, setSuccessValue] = React.useState('#19B394');\n    return (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", marginLeft: -10, marginTop: -10 },\n        React.createElement(ColorPickerComponent, { value: primaryValue, setValue: setPrimaryValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { hasOpacityPicker: false, palette: \"success\", value: successValue, setValue: setSuccessValue, marginLeft: 10, marginTop: 10 })));\n};\nconst ColorPickerConsoleExample = () => {\n    const [secondaryValue, setSecondaryValue] = React.useState('#6C757D');\n    const [dangerValue, setDangerValue] = React.useState('#EF3752');\n    return (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", marginLeft: -10, marginTop: -10 },\n        React.createElement(ColorPickerComponent, { palette: \"secondary\", value: secondaryValue, setValue: setSecondaryValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { hasConsole: false, palette: \"danger\", value: dangerValue, setValue: setDangerValue, marginLeft: 10, marginTop: 10 })));\n};\nconst ColorPickerButtonsExample = () => {\n    const [warningValue, setWarningValue] = React.useState('#F7B84B');\n    const [infoValue, setInfoValue] = React.useState('#4FC6E1');\n    return (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", marginLeft: -10, marginTop: -10 },\n        React.createElement(ColorPickerComponent, { palette: \"warning\", value: warningValue, setValue: setWarningValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { hasButtons: false, palette: \"info\", value: infoValue, setValue: setInfoValue, marginLeft: 10, marginTop: 10 })));\n};\nconst ColorPickerColorPaletteExample = () => {\n    const [lightValue, setLightValue] = React.useState('#F9FBFC');\n    const [darkValue, setDarkValue] = React.useState('#323A46');\n    const [paletteColors, setPaletteColors] = React.useState(['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet']);\n    return (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", marginLeft: -10, marginTop: -10 },\n        React.createElement(ColorPickerComponent, { paletteColors: paletteColors, setPaletteColors: setPaletteColors, palette: \"light\", value: lightValue, setValue: setLightValue, marginLeft: 10, marginTop: 10 }),\n        React.createElement(ColorPickerComponent, { hasPalette: false, palette: \"dark\", value: darkValue, setValue: setDarkValue, marginLeft: 10, marginTop: 10 })));\n};\nconst ColorPickerEventsExample = () => {\n    const [value, setValue] = React.useState('#0F9AEF');\n    return (React.createElement(ColorPickerComponent, { value: value, setValue: setValue, onDrag: e => console.log('onDrag', e), onSave: e => console.log('onSave', e), onCancel: e => console.log('onCancel', e) }));\n};\nconst ColorPickerI18NExample = () => {\n    const [successValue, setSuccessValue] = React.useState('#19B394');\n    const [dangerValue, setDangerValue] = React.useState('#EF3752');\n    return (React.createElement(Div, { alignItems: \"flex-start\", display: \"flex\", flexWrap: \"wrap\", marginLeft: -10, marginTop: -10 },\n        React.createElement(ColorPickerComponent, { marginLeft: 10, marginTop: 10, palette: \"success\", value: successValue, setValue: setSuccessValue }),\n        React.createElement(ColorPickerComponent, { marginLeft: 10, marginTop: 10, palette: \"danger\", value: dangerValue, setValue: setDangerValue, cancelLabel: \"\\u0130ptal\", saveLabel: \"Kaydet\" })));\n};\nconst ColorPicker = () => {\n    usePage({ title: 'Color Picker' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"color-picker\" }, \"Color Picker\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null, \"An embedded color picker.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'value',\n                            type: 'string',\n                            isRequired: true,\n                            description: 'Picker color value.',\n                        },\n                        {\n                            name: 'setValue',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<string>\"),\n                            isRequired: true,\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"value\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'isDisabled',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Prevents user from changing the value.',\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            defaultValue: 'primary',\n                            description: 'Palette item key.',\n                        },\n                        {\n                            name: 'isOutline',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Removes the background color.',\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Uses the soft colors in the palette.',\n                        },\n                        {\n                            name: 'size',\n                            type: React.createElement(LabelLink, { to: \"/api#size-prop\" }, \"SizeProp\"),\n                            defaultValue: 'medium',\n                            description: 'Picker size, has responsive support.',\n                        },\n                        {\n                            name: 'format',\n                            type: React.createElement(LabelLink, { to: \"/api#color-picker-format\" }, \"ColorPickerFormat\"),\n                            defaultValue: 'HEX',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"value\"),\n                                \" format.\"),\n                        },\n                        {\n                            name: 'hasOpacityPicker',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Displays the opacity picker.',\n                        },\n                        {\n                            name: 'hasConsole',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Displays the color console.',\n                        },\n                        {\n                            name: 'hasButtons',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Displays the save and cancel buttons.',\n                        },\n                        {\n                            name: 'hasPalette',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Displays the color palette.',\n                        },\n                        {\n                            name: 'paletteColors',\n                            type: 'string[]',\n                            description: 'Stores the palette colors. If not given, The component stores the colors itself.',\n                        },\n                        {\n                            name: 'setPaletteColors',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<string[]>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"paletteColors\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'canAddColorToPalette',\n                            type: 'boolean',\n                            defaultValue: 'true',\n                            description: 'Indicates if users can add colors to the palette.',\n                        },\n                        {\n                            name: 'onDrag',\n                            type: '(e: Event) => void',\n                            description: 'Invoked when the dragger changes the color.',\n                        },\n                        {\n                            name: 'onSave',\n                            type: '(e: Event) => void',\n                            description: 'Invoked when clicked on the save button. If event is prevented, aborts the save operation.',\n                        },\n                        {\n                            name: 'onCancel',\n                            type: '(e: Event) => void',\n                            description: 'Invoked when clicked on the cancel button. If event is prevented, aborts the cancel operation.',\n                        },\n                        {\n                            name: 'saveLabel',\n                            type: 'string',\n                            defaultValue: 'i18n.save',\n                            description: 'The save button label.',\n                        },\n                        {\n                            name: 'cancelLabel',\n                            type: 'string',\n                            defaultValue: 'i18n.cancel',\n                            description: 'The cancel button label.',\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Color Picker provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#intrinsic-styled-core-props\" }, \"Intrinsic Styled Core Props\"),\n                    \" for the picker element.\"),\n                React.createElement(MultiExample, { first: {\n                        code: `import ColorPicker from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [value, setValue] = React.useState('#0F9AEF')\n\n  return <ColorPicker value={value} setValue={setValue} />\n}`,\n                        output: React.createElement(ColorPickerValueExample, null),\n                        title: 'Value',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport ColorPicker from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [primaryValue, setPrimaryValue] = React.useState('#0665D0')\n  const [dangerValue, setDangerValue] = React.useState('#EF3752')\n\n  return (\n    <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" marginLeft={-10} marginTop={-10}>\n      <ColorPicker\n        value={primaryValue}\n        setValue={setPrimaryValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n      <ColorPicker\n        palette=\"danger\"\n        value={dangerValue}\n        setValue={setDangerValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n    </Div>\n  )\n}`,\n                        output: React.createElement(ColorPickerPaletteExample, null),\n                        title: 'Palette',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\n  import ColorPicker from '@smart-react-components/ui/ColorPicker'\n  import React from 'react'\n\n  export default () => {\n    const [smallValue, setSmallValue] = React.useState('#6C757D')\n    const [mediumValue, setMediumValue] = React.useState('#19B394')\n    const [largeValue, setLargeValue] = React.useState('#F7B84B')\n    const [responsiveValue, setResponsiveValue] = React.useState('#4FC6E1')\n\n    return (\n      <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" marginLeft={-10} marginTop={-10}>\n        <ColorPicker\n          size=\"small\"\n          palette=\"secondary\"\n          value={smallValue}\n          setValue={setSmallValue}\n          marginLeft={10}\n          marginTop={10}\n        />\n        <ColorPicker\n          palette=\"success\"\n          value={mediumValue}\n          setValue={setMediumValue}\n          marginLeft={10}\n          marginTop={10}\n        />\n        <ColorPicker\n          size=\"large\"\n          palette=\"warning\"\n          value={largeValue}\n          setValue={setLargeValue}\n          marginLeft={10}\n          marginTop={10}\n        />\n        <ColorPicker\n          size=\"small\"\n          sizeMd=\"medium\"\n          sizeLg=\"large\"\n          palette=\"info\"\n          value={responsiveValue}\n          setValue={setResponsiveValue}\n          marginLeft={10}\n          marginTop={10}\n        />\n      </Div>\n    )\n  }`,\n                        output: React.createElement(ColorPickerSizeExample, null),\n                        title: 'Size',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport ColorPicker, { ColorPickerFormat } from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [rgbValue, setRGBValue] = React.useState('#F9FBFC')\n  const [hslValue, setHSLValue] = React.useState('#323A46')\n\n  return (\n    <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" marginLeft={-10} marginTop={-10}>\n      <ColorPicker\n        format={ColorPickerFormat.RGB}\n        palette=\"light\"\n        value={rgbValue}\n        setValue={setRGBValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n      <ColorPicker\n        format={ColorPickerFormat.HSL}\n        palette=\"dark\"\n        value={hslValue}\n        setValue={setHSLValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n    </Div>\n  )\n}`,\n                        output: React.createElement(ColorPickerFormatExample, null),\n                        title: 'Format'\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport ColorPicker from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [primaryValue, setPrimaryValue] = React.useState('#0665D0')\n  const [successValue, setSuccessValue] = React.useState('#19B394')\n\n  return (\n    <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" marginLeft={-10} marginTop={-10}>\n      <ColorPicker\n        value={primaryValue}\n        setValue={setPrimaryValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n      <ColorPicker\n        hasOpacityPicker={false}\n        palette=\"success\"\n        value={successValue}\n        setValue={setSuccessValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n    </Div>\n  )\n}`,\n                        output: React.createElement(ColorPickerOpacityPickerExample, null),\n                        title: 'Opacity Picker',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport ColorPicker from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [secondaryValue, setSecondaryValue] = React.useState('#6C757D')\n  const [dangerValue, setDangerValue] = React.useState('#EF3752')\n\n  return (\n    <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" marginLeft={-10} marginTop={-10}>\n      <ColorPicker\n        palette=\"secondary\"\n        value={secondaryValue}\n        setValue={setSecondaryValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n      <ColorPicker\n        hasConsole={false}\n        palette=\"danger\"\n        value={dangerValue}\n        setValue={setDangerValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n    </Div>\n  )\n}`,\n                        output: React.createElement(ColorPickerConsoleExample, null),\n                        title: 'Console',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport ColorPicker from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [warningValue, setWarningValue] = React.useState('#F7B84B')\n  const [infoValue, setInfoValue] = React.useState('#4FC6E1')\n\n  return (\n    <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" marginLeft={-10} marginTop={-10}>\n      <ColorPicker\n        palette=\"warning\"\n        value={warningValue}\n        setValue={setWarningValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n      <ColorPicker\n        hasButtons={false}\n        palette=\"info\"\n        value={infoValue}\n        setValue={setInfoValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n    </Div>\n  )\n}`,\n                        output: React.createElement(ColorPickerButtonsExample, null),\n                        title: 'Buttons',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport ColorPicker from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [lightValue, setLightValue] = React.useState('#F9FBFC')\n  const [darkValue, setDarkValue] = React.useState('#323A46')\n  const [paletteColors, setPaletteColors] = React.useState(['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet'])\n\n  return (\n    <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" marginLeft={-10} marginTop={-10}>\n      <ColorPicker\n        paletteColors={paletteColors}\n        setPaletteColors={setPaletteColors}\n        palette=\"light\"\n        value={lightValue}\n        setValue={setLightValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n      <ColorPicker\n        hasPalette={false}\n        palette=\"dark\"\n        value={darkValue}\n        setValue={setDarkValue}\n        marginLeft={10}\n        marginTop={10}\n      />\n    </Div>\n  )\n}`,\n                        output: React.createElement(ColorPickerColorPaletteExample, null),\n                        title: 'Color Palette',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import ColorPicker from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [value, setValue] = React.useState('#0F9AEF')\n\n  return (\n    <ColorPicker\n      value={value}\n      setValue={setValue}\n      onDrag={e => console.log('onDrag', e)}\n      onSave={e => console.log('onSave', e)}\n      onCancel={e => console.log('onCancel', e)}\n    />\n  )\n}`,\n                        output: React.createElement(ColorPickerEventsExample, null),\n                        title: 'Events',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport ColorPicker from '@smart-react-components/ui/ColorPicker'\nimport React from 'react'\n\nexport default () => {\n  const [successValue, setSuccessValue] = React.useState('#19B394')\n  const [dangerValue, setDangerValue] = React.useState('#EF3752')\n\n  return (\n    <Div alignItems=\"flex-start\" display=\"flex\" flexWrap=\"wrap\" marginLeft={-10} marginTop={-10}>\n      <ColorPicker\n        marginLeft={10}\n        marginTop={10}\n        palette=\"success\"\n        value={successValue}\n        setValue={setSuccessValue}\n      />\n      <ColorPicker\n        marginLeft={10}\n        marginTop={10}\n        palette=\"danger\"\n        value={dangerValue}\n        setValue={setDangerValue}\n        cancelLabel=\"İptal\"\n        saveLabel=\"Kaydet\"\n      />\n    </Div>\n  )\n}`,\n                        output: React.createElement(ColorPickerI18NExample, null),\n                        title: 'I18N',\n                    } }),\n                React.createElement(\"h2\", { id: \"theme-attributes\" }, \"Theme Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'i18n.cancel',\n                            type: 'string',\n                            description: 'The cancel button label.',\n                        },\n                        {\n                            name: 'i18n.save',\n                            type: 'string',\n                            description: 'The save button label.',\n                        },\n                        {\n                            name: 'media.opacityBackground',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"The background image is used in the opacity picker, console, and palette items \",\n                                React.createElement(\"i\", null, \"(in base64 format)\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'radius.colorPicker',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"border-radius\"),\n                                \" value.\")\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"size-attributes\" }, \"Size Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'colorPicker.majorDraggerSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"The major dragger \",\n                                React.createElement(\"i\", null, \"(used in the major picker)\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"width\"),\n                                \" and \",\n                                React.createElement(\"code\", null, \"height\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'colorPicker.majorPickerSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"The major picker \",\n                                React.createElement(\"code\", null, \"width\"),\n                                \" and \",\n                                React.createElement(\"code\", null, \"height\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'colorPicker.minorDraggerSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"The minor dragger \",\n                                React.createElement(\"i\", null, \"(used in the minor and opacity picker)\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"width\"),\n                                \" and \",\n                                React.createElement(\"code\", null, \"height\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'colorPicker.minorPickerWidth',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"The minor and opacity picker \",\n                                React.createElement(\"code\", null, \"width\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'colorPicker.paletteItemSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"The palette item \",\n                                React.createElement(\"code\", null, \"width\"),\n                                \" and \",\n                                React.createElement(\"code\", null, \"height\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'colorPicker.space',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"padding\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'colorPicker.width',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"The picker element \",\n                                React.createElement(\"code\", null, \"width\"),\n                                \" value.\"),\n                        },\n                    ] })),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Date Picker',\n                    to: '/ui-components/date-picker',\n                }, prev: {\n                    label: 'Checkbox',\n                    to: '/ui-components/checkbox',\n                } })),\n        React.createElement(Navbar, { list: [\n                { label: 'Color Picker', id: 'color-picker' },\n                { label: 'Theme Attributes', id: 'theme-attributes' },\n                { label: 'Size Attributes', id: 'size-attributes' },\n            ] })));\n};\nexport default ColorPicker;\n"],"names":[],"sourceRoot":""}