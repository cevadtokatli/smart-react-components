{"version":3,"file":"7db06d42f608340a395f.js","mappings":"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","sources":["webpack://smart-react-components-page/./src/containers/Checkbox.tsx"],"sourcesContent":["import Div from '@smart-react-components/core/Element/Div';\nimport Svg from '@smart-react-components/core/Element/Svg';\nimport CheckboxComponent, { Position } from '@smart-react-components/ui/Checkbox';\nimport CheckboxAll from '@smart-react-components/ui/Checkbox/CheckboxAll';\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup';\nimport React from 'react';\nimport styled from 'styled-components';\nimport AttributesTable from '../components/AttributesTable';\nimport ComponentType from '../components/ComponentType';\nimport Example from '../components/Example';\nimport LabelLink from '../components/LabelLink';\nimport MultiExample from '../components/MultiExample';\nimport Nav from '../components/Nav';\nimport PropsTable from '../components/PropsTable';\nimport SuggestedPages from '../components/SuggestedPages';\nimport Blockquote from '../elements/Blockquote';\nimport Content from '../elements/Content';\nimport Page from '../elements/Page';\nimport usePage from '../hooks/usePage';\nconst CheckboxPaletteExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { label: \"Primary\", value: \"primary\" }),\n        React.createElement(CheckboxComponent, { label: \"Secondary\", palette: \"secondary\", value: \"secondary\" }),\n        React.createElement(CheckboxComponent, { label: \"Success\", palette: \"success\", value: \"success\" }),\n        React.createElement(CheckboxComponent, { label: \"Danger\", palette: \"danger\", value: \"danger\" }),\n        React.createElement(CheckboxComponent, { label: \"Warning\", palette: \"warning\", value: \"warning\" }),\n        React.createElement(CheckboxComponent, { label: \"Info\", palette: \"info\", value: \"info\" }),\n        React.createElement(CheckboxComponent, { label: \"Light\", palette: \"light\", value: \"light\" }),\n        React.createElement(CheckboxComponent, { label: \"Dark\", palette: \"dark\", value: \"dark\" })));\n};\nconst CheckboxOutlineExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { isOutline: true, label: \"Primary\", value: \"primary\" }),\n        React.createElement(CheckboxComponent, { isOutline: true, label: \"Secondary\", palette: \"secondary\", value: \"secondary\" }),\n        React.createElement(CheckboxComponent, { isOutline: true, label: \"Success\", palette: \"success\", value: \"success\" }),\n        React.createElement(CheckboxComponent, { isOutline: true, label: \"Danger\", palette: \"danger\", value: \"danger\" }),\n        React.createElement(CheckboxComponent, { isOutline: true, label: \"Warning\", palette: \"warning\", value: \"warning\" }),\n        React.createElement(CheckboxComponent, { isOutline: true, label: \"Info\", palette: \"info\", value: \"info\" }),\n        React.createElement(CheckboxComponent, { isOutline: true, label: \"Light\", palette: \"light\", value: \"light\" }),\n        React.createElement(CheckboxComponent, { isOutline: true, label: \"Dark\", palette: \"dark\", value: \"dark\" })));\n};\nconst CheckboxSoftExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { isSoft: true, label: \"Primary\", value: \"primary\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, label: \"Secondary\", palette: \"secondary\", value: \"secondary\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, label: \"Success\", palette: \"success\", value: \"success\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, label: \"Danger\", palette: \"danger\", value: \"danger\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, label: \"Warning\", palette: \"warning\", value: \"warning\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, label: \"Info\", palette: \"info\", value: \"info\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, label: \"Light\", palette: \"light\", value: \"light\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, label: \"Dark\", palette: \"dark\", value: \"dark\" })));\n};\nconst CheckboxSoftOutlineExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { isSoft: true, isOutline: true, label: \"Primary\", value: \"primary\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, isOutline: true, label: \"Secondary\", palette: \"secondary\", value: \"secondary\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, isOutline: true, label: \"Success\", palette: \"success\", value: \"success\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, isOutline: true, label: \"Danger\", palette: \"danger\", value: \"danger\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, isOutline: true, label: \"Warning\", palette: \"warning\", value: \"warning\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, isOutline: true, label: \"Info\", palette: \"info\", value: \"info\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, isOutline: true, label: \"Light\", palette: \"light\", value: \"light\" }),\n        React.createElement(CheckboxComponent, { isSoft: true, isOutline: true, label: \"Dark\", palette: \"dark\", value: \"dark\" })));\n};\nconst CheckboxSizeExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { size: \"small\", label: \"Small\", value: \"small\" }),\n        React.createElement(CheckboxComponent, { label: \"Medium\", value: \"medium\" }),\n        React.createElement(CheckboxComponent, { size: \"large\", label: \"Large\", value: \"large\" }),\n        React.createElement(CheckboxComponent, { size: \"small\", sizeMd: \"medium\", sizeLg: \"large\", label: \"Responsive\", value: \"responsive\" })));\n};\nconst CheckboxBlockExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { isBlock: true, active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { label: \"Checkbox-1\", value: \"1\" }),\n        React.createElement(CheckboxComponent, { label: \"Checkbox-2\", value: \"2\" }),\n        React.createElement(CheckboxComponent, { label: \"Checkbox-3\", value: \"3\" })));\n};\nconst CheckboxShapeExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { label: \"Rectangle\", value: \"rectangle\" }),\n        React.createElement(CheckboxComponent, { shape: \"rounded\", label: \"Rounded\", value: \"rounded\" })));\n};\nconst CheckboxDisabledExample = () => {\n    const [active, setActive] = React.useState(['success', 'danger']);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { isDisabled: true, label: \"Primary\", value: \"primary\" }),\n        React.createElement(CheckboxComponent, { isDisabled: true, isOutline: true, label: \"Secondary\", value: \"secondary\" }),\n        React.createElement(CheckboxComponent, { isDisabled: true, palette: \"success\", label: \"Success\", value: \"success\" }),\n        React.createElement(CheckboxComponent, { isDisabled: true, palette: \"danger\", isOutline: true, label: \"Danger\", value: \"danger\" })));\n};\nconst CheckboxPositionExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { position: Position.LEFT, label: \"Left\", value: \"left\" }),\n        React.createElement(CheckboxComponent, { label: \"Right\", value: \"right\" })));\n};\nconst CheckboxIcon = styled(Svg).attrs(({ isChecked, palette }) => ({\n    children: React.createElement(\"path\", { d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" }),\n    fill: isChecked ? `!${palette}` : '$color.dynamic.accent',\n    transform: `rotate(${isChecked ? 0 : -90}deg)`,\n    transition: '.2s ease-in-out',\n    viewBox: '0 0 24 24',\n    width: 20,\n})) ``;\nconst CheckboxTemplate = ({ children, isChecked, palette }) => (React.createElement(Div, { display: \"flex\" },\n    children,\n    React.createElement(CheckboxIcon, { isChecked: isChecked, palette: palette })));\nconst CheckboxTemplateExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { active: active, setActive: setActive },\n        React.createElement(CheckboxComponent, { template: React.createElement(CheckboxTemplate, null), label: \"Primary\", value: \"primary\" }),\n        React.createElement(CheckboxComponent, { template: React.createElement(CheckboxTemplate, null), label: \"Sucess\", palette: \"success\", value: \"success\" }),\n        React.createElement(CheckboxComponent, { template: React.createElement(CheckboxTemplate, null), label: \"Danger\", palette: \"danger\", value: \"danger\" }),\n        React.createElement(CheckboxComponent, { template: React.createElement(CheckboxTemplate, null), label: \"Warning\", palette: \"warning\", value: \"warning\" })));\n};\nconst CheckboxAllExample = () => {\n    const [active, setActive] = React.useState([]);\n    return (React.createElement(CheckboxGroup, { isBlock: true, active: active, setActive: setActive },\n        React.createElement(CheckboxAll, { label: \"All\", items: ['1', '2', '3', '4', '5'], active: active, setActive: setActive }),\n        React.createElement(CheckboxComponent, { label: \"Item-1\", value: \"1\" }),\n        React.createElement(CheckboxComponent, { label: \"Item-2\", value: \"2\" }),\n        React.createElement(CheckboxComponent, { label: \"Item-3\", value: \"3\" }),\n        React.createElement(CheckboxComponent, { label: \"Item-4\", value: \"4\" }),\n        React.createElement(CheckboxComponent, { label: \"Item-5\", value: \"5\" })));\n};\nconst Checkbox = () => {\n    usePage({ title: 'Checkbox' });\n    return (React.createElement(Page, null,\n        React.createElement(Content, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"h1\", { id: \"Checkbox\" }, \"Checkbox\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    React.createElement(\"code\", null, \"input\"),\n                    \" with \",\n                    React.createElement(\"code\", null, \"type=\\\"checkbox\\\"\")),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'value',\n                            type: React.createElement(LabelLink, { to: \"/api#form-value\" }, \"FormValue\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"input\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"value\"),\n                                \" attribute.\")\n                        },\n                        {\n                            name: 'active',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#form-value\" }, \"FormValue\"),\n                                \"[]\"),\n                            description: 'Active values.',\n                        },\n                        {\n                            name: 'setActive',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<\",\n                                React.createElement(LabelLink, { to: \"/api#form-value\" }, \"FormValue\"),\n                                \"[]>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"active\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'isChecked',\n                            type: 'boolean',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"input\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"checked\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'setChecked',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<boolean>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"isChecked\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'label',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            description: 'Checkbox label.',\n                        },\n                        {\n                            name: 'name',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"input\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"name\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'isDisabled',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"input\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"disabled\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'isRequired',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"input\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"required\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'isIndeterminate',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Sets the checkbox as indeterminate.',\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            defaultValue: 'primary',\n                            description: 'Palette item key.',\n                        },\n                        {\n                            name: 'isOutline',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Removes the background color.',\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Uses the soft colors in the palette.',\n                        },\n                        {\n                            name: 'size',\n                            type: React.createElement(LabelLink, { to: \"/api#size-prop\" }, \"SizeProp\"),\n                            defaultValue: 'medium',\n                            description: 'Checkbox size, has responsive support.',\n                        },\n                        {\n                            name: 'isBlock',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Sets checkbox as block element.',\n                        },\n                        {\n                            name: 'shape',\n                            type: React.createElement(LabelLink, { to: \"/api#shape-prop\" }, \"ShapeProp\"),\n                            defaultValue: 'rectangle',\n                            description: 'Checkbox shape.',\n                        },\n                        {\n                            name: 'position',\n                            type: React.createElement(LabelLink, { to: \"/api#order-position\" }, \"OrderPosition\"),\n                            defaultValue: 'RIGHT',\n                            description: 'Label position on the checkbox.',\n                        },\n                        {\n                            name: 'template',\n                            type: 'JSX.Element',\n                            description: 'Custom template for the checkbox.',\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Checkbox provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#intrinsic-styled-core-props\" }, \"Intrinsic Styled Core Props\"),\n                    \" for the container element.\"),\n                React.createElement(Blockquote, null,\n                    \"Checkbox provides \",\n                    React.createElement(\"code\", null, \"forwardRef\"),\n                    \" to the \",\n                    React.createElement(\"code\", null, \"input\"),\n                    \" element.\"),\n                React.createElement(\"h2\", { id: \"checkbox-all\" }, \"Checkbox All\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Checkbox All acts like a parent to a group of \",\n                    React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkboxes\"),\n                    \". It checks all children \",\n                    React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkboxes\"),\n                    \" or unchecks them when clicked on according to its status.\"),\n                React.createElement(\"p\", null,\n                    React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                    \" provides two different status; checked and unchecked. On the other hand, Checkbox All provides an additional status as indeterminate to indicate that some of items are checked.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'items',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#form-value\" }, \"FormValue\"),\n                                \"[]\"),\n                            isRequired: true,\n                            description: 'Children values.',\n                        },\n                        {\n                            name: 'active',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#form-value\" }, \"FormValue\"),\n                                \"[]\"),\n                            description: 'Active values.',\n                        },\n                        {\n                            name: 'setActive',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<\",\n                                React.createElement(LabelLink, { to: \"/api#form-value\" }, \"FormValue\"),\n                                \"[]>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"active\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'label',\n                            type: React.createElement(LabelLink, { to: \"/api#content-element\" }, \"ContentElement\"),\n                            description: 'Checkbox label.',\n                        },\n                        {\n                            name: 'name',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"input\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"name\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'isDisabled',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"input\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"disabled\"),\n                                \" attribute.\"),\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            defaultValue: 'primary',\n                            description: 'Palette item key.',\n                        },\n                        {\n                            name: 'isOutline',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Removes the background color.',\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Uses the soft colors in the palette.',\n                        },\n                        {\n                            name: 'size',\n                            type: React.createElement(LabelLink, { to: \"/api#size-prop\" }, \"SizeProp\"),\n                            defaultValue: 'medium',\n                            description: 'Checkbox size, has responsive support.',\n                        },\n                        {\n                            name: 'isBlock',\n                            type: 'boolean',\n                            defaultValue: 'false',\n                            description: 'Sets checkbox as block element.',\n                        },\n                        {\n                            name: 'shape',\n                            type: React.createElement(LabelLink, { to: \"/api#shape-prop\" }, \"ShapeProp\"),\n                            defaultValue: 'rectangle',\n                            description: 'Checkbox shape.',\n                        },\n                        {\n                            name: 'position',\n                            type: React.createElement(LabelLink, { to: \"/api#order-position\" }, \"OrderPosition\"),\n                            defaultValue: 'RIGHT',\n                            description: 'Label position on the checkbox.',\n                        },\n                        {\n                            name: 'template',\n                            type: 'JSX.Element',\n                            description: 'Custom template for the checkbox.',\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Checkbox All provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#intrinsic-styled-core-props\" }, \"Intrinsic Styled Core Props\"),\n                    \" for the container element.\"),\n                React.createElement(Blockquote, null,\n                    \"Checkbox All provides \",\n                    React.createElement(\"code\", null, \"forwardRef\"),\n                    \" to the \",\n                    React.createElement(\"code\", null, \"input\"),\n                    \" element.\"),\n                React.createElement(\"h2\", { id: \"checkbox-group\" }, \"Checkbox Group\"),\n                React.createElement(ComponentType, null),\n                React.createElement(\"p\", null,\n                    \"Takes \",\n                    React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkboxes\"),\n                    \" as children.\"),\n                React.createElement(\"h3\", null, \"Props\"),\n                React.createElement(PropsTable, { props: [\n                        {\n                            name: 'children',\n                            type: 'JSX.Element[]',\n                            isRequired: true,\n                            description: 'Checkbox elements.',\n                        },\n                        {\n                            name: 'active',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#form-value\" }, \"FormValue\"),\n                                \"[]\"),\n                            description: 'Active values.',\n                        },\n                        {\n                            name: 'setActive',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#set-state\" }, \"SetState\"),\n                                \"<\",\n                                React.createElement(LabelLink, { to: \"/api#form-value\" }, \"FormValue\"),\n                                \"[]>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"The method that sets \",\n                                React.createElement(\"code\", null, \"active\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'name',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"name\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'isRequired',\n                            type: 'boolean',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"isRequired\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'palette',\n                            type: React.createElement(LabelLink, { to: \"/api#palette-prop\" }, \"PaletteProp\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"palette\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'isOutline',\n                            type: 'boolean',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"isOutline\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'isSoft',\n                            type: 'boolean',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"isSoft\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'size',\n                            type: React.createElement(LabelLink, { to: \"/api#size-prop\" }, \"SizeProp\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"size\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'isBlock',\n                            type: 'boolean',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"isBlock\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'shape',\n                            type: React.createElement(LabelLink, { to: \"/api#shape-prop\" }, \"ShapeProp\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"shape\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'position',\n                            type: React.createElement(LabelLink, { to: \"/api#order-position\" }, \"OrderPosition\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"position\"),\n                                \" prop.\"),\n                        },\n                        {\n                            name: 'template',\n                            type: 'JSX.Element',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/ui-components/checkbox#checkbox\" }, \"Checkbox\"),\n                                \" \",\n                                React.createElement(\"code\", null, \"template\"),\n                                \" prop.\"),\n                        },\n                    ] }),\n                React.createElement(Blockquote, null,\n                    \"Checkbox Group provides \",\n                    React.createElement(LabelLink, { to: \"/element-props#intrinsic-styled-core-props\" }, \"Intrinsic Styled Core Props\"),\n                    \" for the group element.\"),\n                React.createElement(\"h2\", { id: \"example\" }, \"Example\"),\n                React.createElement(MultiExample, { first: {\n                        code: `import Checkbox from '@smart-react-components/ui/Checkbox'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nexport default () => {\n  const [active, setActive] = React.useState<string[]>([])\n\n  return (\n    <CheckboxGroup active={active} setActive={setActive}>\n      <Checkbox label=\"Primary\" value=\"primary\" />\n      <Checkbox label=\"Secondary\" palette=\"secondary\" value=\"secondary\" />\n      <Checkbox label=\"Success\" palette=\"success\" value=\"success\" />\n      <Checkbox label=\"Danger\" palette=\"danger\" value=\"danger\" />\n      <Checkbox label=\"Warning\" palette=\"warning\" value=\"warning\" />\n      <Checkbox label=\"Info\" palette=\"info\" value=\"info\" />\n      <Checkbox label=\"Light\" palette=\"light\" value=\"light\" />\n      <Checkbox label=\"Dark\" palette=\"dark\" value=\"dark\" />\n    </CheckboxGroup>\n  )\n}`,\n                        output: React.createElement(CheckboxPaletteExample, null),\n                        title: 'Palette',\n                    }, second: {\n                        code: `import Checkbox from '@smart-react-components/ui/Checkbox'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nexport default () => {\n  const [active, setActive] = React.useState<string[]>([])\n\n  return (\n    <CheckboxGroup active={active} setActive={setActive}>\n      <Checkbox isOutline label=\"Primary\" value=\"primary\" />\n      <Checkbox isOutline label=\"Secondary\" palette=\"secondary\" value=\"secondary\" />\n      <Checkbox isOutline label=\"Success\" palette=\"success\" value=\"success\" />\n      <Checkbox isOutline label=\"Danger\" palette=\"danger\" value=\"danger\" />\n      <Checkbox isOutline label=\"Warning\" palette=\"warning\" value=\"warning\" />\n      <Checkbox isOutline label=\"Info\" palette=\"info\" value=\"info\" />\n      <Checkbox isOutline label=\"Light\" palette=\"light\" value=\"light\" />\n      <Checkbox isOutline label=\"Dark\" palette=\"dark\" value=\"dark\" />\n    </CheckboxGroup>\n  )\n}`,\n                        output: React.createElement(CheckboxOutlineExample, null),\n                        title: 'Outline',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Checkbox from '@smart-react-components/ui/Checkbox'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nexport default () => {\n  const [active, setActive] = React.useState<string[]>([])\n\n  return (\n    <CheckboxGroup active={active} setActive={setActive}>\n      <Checkbox size=\"small\" label=\"Small\" value=\"small\" />\n      <Checkbox label=\"Medium\" value=\"medium\" />\n      <Checkbox size=\"large\" label=\"Large\" value=\"large\" />\n      <Checkbox size=\"small\" sizeMd=\"medium\" sizeLg=\"large\" label=\"Responsive\" value=\"responsive\" />\n    </CheckboxGroup>\n  )\n}`,\n                        output: React.createElement(CheckboxSizeExample, null),\n                        title: 'Size',\n                    }, second: {\n                        code: `import Checkbox from '@smart-react-components/ui/Checkbox'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nexport default () => {\n  const [active, setActive] = React.useState<string[]>([])\n\n  return (\n    <CheckboxGroup isBlock active={active} setActive={setActive}>\n      <Checkbox label=\"Checkbox-1\" value=\"1\" />\n      <Checkbox label=\"Checkbox-2\" value=\"2\" />\n      <Checkbox label=\"Checkbox-3\" value=\"3\" />\n    </CheckboxGroup>\n  )\n}`,\n                        output: React.createElement(CheckboxBlockExample, null),\n                        title: 'Block',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Checkbox from '@smart-react-components/ui/Checkbox'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nexport default () => {\n  const [active, setActive] = React.useState<string[]>([])\n\n  return (\n    <CheckboxGroup active={active} setActive={setActive}>\n      <Checkbox label=\"Rectangle\" value=\"rectangle\" />\n      <Checkbox shape=\"rounded\" label=\"Rounded\" value=\"rounded\" />\n    </CheckboxGroup>\n  )\n}`,\n                        output: React.createElement(CheckboxShapeExample, null),\n                        title: 'Shape',\n                    }, second: {\n                        code: `import Checkbox from '@smart-react-components/ui/Checkbox'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nexport default () => {\n  const [active, setActive] = React.useState(['success', 'danger'])\n\n  return (\n    <CheckboxGroup active={active} setActive={setActive}>\n      <CheckboxComponent isDisabled label=\"Primary\" value=\"primary\" />\n      <CheckboxComponent isDisabled isOutline label=\"Secondary\" value=\"secondary\" />\n      <CheckboxComponent isDisabled palette=\"success\" label=\"Success\" value=\"success\" />\n      <CheckboxComponent isDisabled palette=\"danger\" isOutline label=\"Danger\" value=\"danger\" />\n    </CheckboxGroup>\n  )\n}`,\n                        output: React.createElement(CheckboxDisabledExample, null),\n                        title: 'Disabled',\n                    } }),\n                React.createElement(MultiExample, { first: {\n                        code: `import Checkbox, { Position } from '@smart-react-components/ui/Checkbox'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nexport default () => {\n  const [active, setActive] = React.useState<string[]>([])\n\n  return (\n    <CheckboxGroup active={active} setActive={setActive}>\n      <Checkbox position={Position.LEFT} label=\"Left\" value=\"left\" />\n      <Checkbox label=\"Right\" value=\"right\" />\n    </CheckboxGroup>\n  )\n}`,\n                        output: React.createElement(CheckboxPositionExample, null),\n                        title: 'Position',\n                    }, second: {\n                        code: `import Div from '@smart-react-components/core/Element/Div'\nimport Svg from '@smart-react-components/core/Element/Svg'\nimport Checkbox from '@smart-react-components/ui/Checkbox'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nconst CheckboxIcon = styled(Svg).attrs(({ isChecked, palette }) => ({\n  children: <path d=\"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />,\n  fill: isChecked ? \\`!\\${palette}\\` : '$color.dynamic.accent',\n  transform: \\`rotate(\\${isChecked ? 0 : -90}deg)\\`,\n  transition: '.2s ease-in-out',\n  viewBox: '0 0 24 24',\n  width: 20,\n}))\\`\\`\n\nconst CheckboxTemplate: React.FC<any> = ({ children, isChecked, palette }) => (\n  <Div display=\"flex\"> \n    { children }\n    <CheckboxIcon isChecked={isChecked} palette={palette} />\n  </Div>\n)\n\nconst CheckboxTemplateExample = () => {\n  const [active, setActive] = React.useState<string[]>([])\n\n  return (\n    <CheckboxGroup active={active} setActive={setActive}>\n      <Checkbox template={<CheckboxTemplate />} label=\"Primary\" value=\"primary\" />\n      <Checkbox template={<CheckboxTemplate />} label=\"Sucess\" palette=\"success\" value=\"success\" />\n      <Checkbox template={<CheckboxTemplate />} label=\"Danger\" palette=\"danger\" value=\"danger\" />\n      <Checkbox template={<CheckboxTemplate />} label=\"Warning\" palette=\"warning\" value=\"warning\" />\n    </CheckboxGroup>\n  )\n}`,\n                        output: React.createElement(CheckboxTemplateExample, null),\n                        title: 'Template',\n                    } }),\n                React.createElement(Example, { code: `import Checkbox from '@smart-react-components/ui/Checkbox'\nimport CheckboxAll from '@smart-react-components/ui/Checkbox/CheckboxAll'\nimport CheckboxGroup from '@smart-react-components/ui/Checkbox/CheckboxGroup'\nimport React from 'react'\n\nexport default () => {\n  const [active, setActive] = React.useState<string[]>([])\n\n  return (\n    <CheckboxGroup isBlock active={active} setActive={setActive}>\n      <CheckboxAll label=\"All\" items={['1', '2', '3', '4', '5']} active={active} setActive={setActive} />\n      <Checkbox label=\"Item-1\" value=\"1\" />\n      <Checkbox label=\"Item-2\" value=\"2\" />\n      <Checkbox label=\"Item-3\" value=\"3\" />\n      <Checkbox label=\"Item-4\" value=\"4\" />\n      <Checkbox label=\"Item-5\" value=\"5\" />\n    </CheckboxGroup>\n  )\n}`, output: React.createElement(CheckboxAllExample, null), title: \"All\" }),\n                React.createElement(\"h2\", { id: \"theme-attributes\" }, \"Theme Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'cursor.formInlineLabel',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"cursor\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'fontFamily.form',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Label \",\n                                React.createElement(\"code\", null, \"font-family\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'opacity.formDisabled',\n                            type: 'number',\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"opacity\"),\n                                \" value when \",\n                                React.createElement(\"code\", null, \"isDisabled\"),\n                                \" is \",\n                                React.createElement(\"code\", null, \"true\"),\n                                \".\"),\n                        },\n                        {\n                            name: 'radius.checkbox',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#shape\" }, \"Shape\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                React.createElement(\"code\", null, \"border-radius\"),\n                                \" value. Used by \",\n                                React.createElement(\"code\", null, \"shape\"),\n                                \" prop.\"),\n                        },\n                    ] }),\n                React.createElement(\"h2\", { id: \"size-attributes\" }, \"Size Attributes\"),\n                React.createElement(AttributesTable, { attrs: [\n                        {\n                            name: 'form.inlineLabel.fontSize',\n                            type: 'string',\n                            description: React.createElement(React.Fragment, null,\n                                \"Label \",\n                                React.createElement(\"code\", null, \"font-size\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'form.inlineLabel.margin',\n                            type: React.createElement(React.Fragment, null,\n                                React.createElement(LabelLink, { to: \"/api#coordinator\" }, \"Coordinator\"),\n                                \"<string>\"),\n                            description: React.createElement(React.Fragment, null,\n                                \"Label \",\n                                React.createElement(\"code\", null, \"margin\"),\n                                \" value.\"),\n                        },\n                        {\n                            name: 'checkbox',\n                            type: 'string',\n                            description: 'Checkbox size.',\n                        },\n                    ] })),\n            React.createElement(SuggestedPages, { next: {\n                    label: 'Color Picker',\n                    to: '/ui-components/color-picker',\n                }, prev: {\n                    label: 'Button',\n                    to: '/ui-components/button',\n                } })),\n        React.createElement(Nav, { list: [\n                { label: 'Checkbox', id: 'checkbox' },\n                { label: 'Checkbox All', id: 'checkbox-all' },\n                { label: 'Checkbox Group', id: 'checkbox-group' },\n                { label: 'Example', id: 'example' },\n                { label: 'Theme Attributes', id: 'theme-attributes' },\n                { label: 'Size Attributes', id: 'size-attributes' },\n            ] })));\n};\nexport default Checkbox;\n"],"names":[],"sourceRoot":""}